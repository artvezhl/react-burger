{"version":3,"sources":["components/app/app.module.css","pages/home.module.css","components/burger-ingredients/ingredients-tabs/ingredients-tabs.module.css","components/burger-constructor/burger-constructor.module.css","components/auth-form/auth-form.module.css","pages/login.module.css","components/profile/profile-history/profile-history.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header-item/app-header-item.tsx","services/constants.ts","components/app-header/app-header.tsx","services/hooks.ts","components/protected-route/ProtectedRoute.tsx","components/burger-ingredients/ingredients-tabs/ingredients-tabs.tsx","components/burger-ingredients/ingredient/ingredient.tsx","components/burger-ingredients/ingredients/ingredients.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-constructor/constructor-ingredient/constructor-ingredient.tsx","components/burger-constructor/constructor-list/constructor-list.tsx","components/modal/modal-overlay.tsx","components/modal/modal.tsx","images/done.svg","utils/index.ts","services/actions/order-details.ts","components/order-details/order-details.tsx","components/burger-constructor/constructor-cart/constructor-cart.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","components/auth-form/auth-form.tsx","services/api.ts","services/actions/auth.ts","pages/login.tsx","pages/notFound.tsx","pages/register.tsx","pages/forgotPassword.tsx","pages/resetPassword.tsx","components/profile/profile-edit/profile-edit.tsx","services/action-types/wsActionTypes.ts","components/circle-ingredient/circle-ingredient.tsx","components/feed/feed-order/feed-order.tsx","components/profile/profile-history/profile-history.tsx","components/profile/profile.tsx","pages/profile.tsx","pages/ingredient.tsx","components/feed/feed.tsx","components/feed/orders/orders.tsx","pages/orderFeed.tsx","components/order-ingredient/order-ingredient.tsx","pages/order.tsx","components/ingredient-details/ingredient-details.tsx","services/actions/burger-ingredients.ts","components/app/app.tsx","reportWebVitals.ts","services/reducers/burger-ingredients.ts","services/reducers/constructor-list.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/auth.ts","services/reducers/wsFeedReducer.ts","services/reducers/wsUserFeedReducer.ts","services/reducers/index.ts","index.jsx","services/middlewares/socketMiddleware.ts","pages/ingredient.module.css","pages/profile.module.css","components/feed/orders/orders.module.css","components/order-details/order-details.module.css","components/feed/feed-order/feed-order.module.css","pages/order.module.css","components/burger-constructor/constructor-list/constructor-list.module.css","components/modal/popup.module.css","pages/register.module.css","components/app-header/app-header.module.css","components/profile/profile-edit/profile-edit.module.css","components/feed/feed.module.css","components/burger-ingredients/ingredients/ingredients.module.css","components/burger-ingredients/ingredient/ingredient.module.css","components/circle-ingredient/circle-ingredient.module.css","components/app-header/app-header-item/app-header-item.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/constructor-cart/constructor-cart.module.css","pages/notFound.module.css","components/order-ingredient/order-ingredient.module.css"],"names":["module","exports","AppHeaderItem","text","path","setHover","children","textColor","useLocation","pathname","className","itemStyles","header__item","to","header__iconWrapper","header__link","onMouseEnter","onMouseLeave","REQUEST_URL","WS_URL","DEPLOY_URL","GET_USER_SUCCESS","GET_USER_FAILED","SET_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","AUTHORIZE_USER","AUTHORIZE_USER_SUCCESS","AUTHORIZE_USER_FAILED","REFRESH_TOKEN","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILED","SET_PASSWORD_RESET","GET_INGREDIENTS","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SET_ACTIVE_TAB","INCREASE_INGREDIENT_COUNT","DECREASE_INGREDIENT_COUNT","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_TOTAL","SET_INGREDIENT_INDEX","SET_INGREDIENTS_IDS","MOVE_CARD","SET_INGREDIENT_DETAILS","REMOVE_INGREDIENT_DETAILS","GET_ORDER_NUMBER","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","RESET_ORDER_NUMBER","AppHeader","useState","main","setMainActive","orders","setOrdersActive","profile","setProfileActive","headerStyles","header","header__nav","header__list","type","header__logo","useSelector","selectorHook","useDispatch","dispatchHook","ProtectedRoute","rest","user","state","auth","location","profilePages","render","IngredientsTabs","activeMeal","changeMeal","tabsStyles","ingredients__tabs","value","active","onClick","Ingredient","ingredient","useDrag","item","ingredientRef","_id","background","ref","ingredientStyles","src","image","alt","name","ingredient__priceWrapper","ingredient__price","price","ingredient__name","ingredientCount","count","size","Ingredients","data","dispatch","tabScrollChange","inView","entry","tab","target","firstElementChild","innerHTML","ingredients","as","threshold","onChange","ingredients__list","map","BurgerIngredients","isLoading","ingredientsRequest","hasError","ingredientsFailed","activeTab","ingredientsContent","ingredientsStyles","ingredients__loading","length","meal","mealType","ConstructorIngredient","memo","index","moveCard","setIngredientsIndex","cardRef","useRef","useDrop","accept","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","current","getBoundingClientRect","console","log","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","collect","isDragging","drag","useEffect","opacity","style","e","id","closest","ingredientId","removeIngredient","listStyles","thumbnail","ConstructorList","bun","burger","atIndex","listRef","cartTotal","useCallback","total","forEach","setIngredientsIDs","ingredientsIDs","concat","IDs","topBunMarkup","bothSides","isLocked","bottomBunMarkup","ingredientsMarkup","constructorList","renderIngredients","content","Object","keys","onDrop","preventDefault","commonList","ModalOverlay","onClose","popupStyles","popup__overlay","modalRoot","document","getElementById","Modal","title","onEscKeyDown","key","addEventListener","removeEventListener","createPortal","popup__content","stopPropagation","popup__base","popup__title","popup__cross","formHandler","setForm","form","setCookie","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","dataFunc","date","result","currentDate","isToday","isYesterday","formatDistanceToNow","locale","ru","format","orderSumFunc","currentIgd","find","getOrderNumber","orderIDs","token","fetch","method","headers","authorization","body","JSON","stringify","then","res","ok","json","number","order","catch","OrderDetails","ingredientIDs","orderNumber","orderNumberRequest","orderNumberFailed","orderStyles","order__text_type_centered","order__number","order__done","doneButton","ConstructorCart","visibleModal","setVisibleModal","history","useHistory","modal","totalStyles","constructor__total","constructor__price","BurgerConstructor","constructorStyles","constructor","HomePage","homeStyles","DndProvider","backend","HTML5Backend","AuthForm","formStyles","checkResponse","err","Promise","reject","fetchWithRefresh","url","options","a","message","localStorage","getItem","refreshData","setItem","refreshToken","accessToken","Authorization","actionCreators","passwordIsReset","LoginPage","passwordInputIcon","setIcon","email","password","passwordRef","onIconClick","login","mode","cache","credentials","redirect","referrerPolicy","split","loginRequest","loginStyles","onSubmit","placeholder","icon","auth__text","auth__link","NotFoundPage","notFoundStyles","notFound","link","RegisterPage","register","registerRequest","registerStyles","emailPattern","ForgotPasswordPage","setEmail","error","setError","isPasswordReset","passwordReset","success","forgotPassword","errorText","ResetPasswordPage","setPassword","code","setCode","passError","setPassError","codeError","setCodeError","resetPassword","onFocusInput","inputRef","classList","add","styles","input_isActive","onBlurInput","remove","focus","ProfileEdit","nameRef","loginRef","resetChanges","updateInfo","Error","updateUserInfo","inputs","onFocus","onBlur","info_change","info_cancel","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","indexCreator","zIndex","CircleIngredient","totalIngrds","total_ingredients","image_background","FeedOrder","store","renderIngredientsImages","ingredientsArray","ingredientID","ImageElement","ingredientsLength","currentIngredient","formatedIngredientsIDs","cuttedIDs","slice","images","reverse","price_icon","ProfileHistory","userFeed","payload","createdAt","Profile","ProfilePage","activeRouteHandler","profileStyles","profile__link_isActive","profile__link","logout","removeItem","profile__list","profile__item","currentIngredients","setCurrentIngredient","useParams","filter","image_large","content__row","ingredient__details","calories","proteins","fat","carbohydrates","Feed","feed","feedStyles","list","Orders","totalToday","readyOrders","status","cookingOrders","orders__list","orders__item_done","orders__item","digits_shadow","OrderFeedPage","OrderIngredient","OrderPage","currentOrders","currentOrder","setCurrentOrder","isIngredientsCount","setIsIngredientsCount","setOrder","orderStatus","ingredientsOfOrder","reduce","arr","ingredientOrderCount","push","orderIngredients","i","IngredientDetails","detailsStyles","App","getUserInfo","back","goBack","modalOpen","action","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ConstructorInitialState","IngredientInitialState","initialUserState","userDataRequest","userDataFailed","wsConnected","rootReducer","combineReducers","dragIngredient","newIngredients","splice","details","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","socket","next","WebSocket","readyState","close","onopen","onerror","event","onmessage","parsedData","parse","restData","onclose","wasClean","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b3fb5cc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\",\"centered\":\"app_centered__8OSiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__3hh9x\",\"centered\":\"home_centered__33pkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients__tabs\":\"ingredients-tabs_ingredients__tabs__xvA8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__2Wifa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"auth-form_auth__3BJcu\",\"auth__text\":\"auth-form_auth__text__VY6oV\",\"auth__link\":\"auth-form_auth__link__1no8Q\",\"form\":\"auth-form_form__1d4QB\",\"title\":\"auth-form_title__3QMLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1908J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-history_main__3tCDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient__details\":\"ingredient-details_ingredient__details__2WGWX\"};","import React, { FC } from 'react';\n\nimport itemStyles from './app-header-item.module.css';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { TAppHeaderItemProps } from './app-header-item-types';\nimport { TLocationState } from '../app-header-types';\n\nconst AppHeaderItem: FC<TAppHeaderItemProps> = ({ text, path = '/', setHover, children }) => {\n    const { pathname } = useLocation<TLocationState>();\n\n    const textColor = pathname !== path ? 'text_color_inactive' : '';\n\n    return (\n        <li className={`mt-4 mb-4 pt-4 pb-4 pl-5 pr-5 ${itemStyles.header__item}`}>\n            <NavLink to={path} className={children ? `mr-2 ${itemStyles.header__iconWrapper}` : ''}>\n                {children}\n                <p\n                    className={`text text_type_main-default ${textColor} ${itemStyles.header__link}`}\n                    onMouseEnter={() => setHover(true)}\n                    onMouseLeave={() => setHover(false)}\n                >\n                    {text}\n                </p>\n            </NavLink>\n        </li>\n    );\n};\n\nexport default AppHeaderItem;\n","const REQUEST_URL = 'https://norma.nomoreparties.space/api' as const;\nconst WS_URL = 'wss://norma.nomoreparties.space/orders' as const;\nconst DEPLOY_URL = 'react-burger/';\n\nconst GET_USER_SUCCESS = 'GET_USER_SUCCESS' as const;\nconst GET_USER_FAILED = 'GET_USER_FAILED' as const;\nconst SET_USER = 'SET_USER' as const;\nconst REGISTER_USER = 'REGISTER_USER' as const;\nconst REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS' as const;\nconst REGISTER_USER_FAILED = 'REGISTER_USER_FAILED' as const;\nconst AUTHORIZE_USER = 'AUTHORIZE_USER' as const;\nconst AUTHORIZE_USER_SUCCESS = 'AUTHORIZE_USER_SUCCESS' as const;\nconst AUTHORIZE_USER_FAILED = 'AUTHORIZE_USER_FAILED' as const;\nconst REFRESH_TOKEN = 'REFRESH_TOKEN' as const;\nconst REFRESH_TOKEN_SUCCESS = 'REFRESH_TOKEN_SUCCESS' as const;\nconst REFRESH_TOKEN_FAILED = 'REFRESH_TOKEN_FAILED' as const;\nconst LOGOUT = 'LOGOUT' as const;\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS' as const;\nconst LOGOUT_FAILED = 'LOGOUT_FAILED' as const;\nconst SET_PASSWORD_RESET = 'SET_PASSWORD_RESET' as const;\nconst GET_INGREDIENTS = 'GET_INGREDIENTS' as const;\nconst GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS' as const;\nconst GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED' as const;\nconst SET_ACTIVE_TAB = 'SET_ACTIVE_TAB' as const;\nconst INCREASE_INGREDIENT_COUNT = 'INCREASE_INGREDIENT_COUNT' as const;\nconst DECREASE_INGREDIENT_COUNT = 'DECREASE_INGREDIENT_COUNT' as const;\nconst ADD_INGREDIENT = 'ADD_INGREDIENT' as const;\nconst REMOVE_INGREDIENT = 'REMOVE_INGREDIENT' as const;\nconst SET_TOTAL = 'SET_TOTAL' as const;\nconst SET_INGREDIENT_INDEX = 'SET_INGREDIENT_INDEX' as const;\nconst SET_INGREDIENTS_IDS = 'SET_INGREDIENTS_IDS' as const;\nconst MOVE_CARD = 'MOVE_CARD' as const;\nconst SET_INGREDIENT_DETAILS = 'SET_INGREDIENT_DETAILS' as const;\nconst REMOVE_INGREDIENT_DETAILS = 'REMOVE_INGREDIENT_DETAILS' as const;\nconst GET_ORDER_NUMBER = 'GET_ORDER_NUMBER' as const;\nconst GET_ORDER_NUMBER_SUCCESS = 'GET_ORDER_NUMBER_SUCCESS' as const;\nconst GET_ORDER_NUMBER_FAILED = 'GET_ORDER_NUMBER_FAILED' as const;\nconst RESET_ORDER_NUMBER = 'RESET_ORDER_NUMBER' as const;\n\nexport {\n    REQUEST_URL,\n    WS_URL,\n    DEPLOY_URL,\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n    SET_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    AUTHORIZE_USER,\n    AUTHORIZE_USER_SUCCESS,\n    AUTHORIZE_USER_FAILED,\n    REFRESH_TOKEN,\n    REFRESH_TOKEN_SUCCESS,\n    REFRESH_TOKEN_FAILED,\n    LOGOUT,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILED,\n    SET_PASSWORD_RESET,\n    GET_INGREDIENTS,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    SET_ACTIVE_TAB,\n    INCREASE_INGREDIENT_COUNT,\n    DECREASE_INGREDIENT_COUNT,\n    ADD_INGREDIENT,\n    REMOVE_INGREDIENT,\n    SET_TOTAL,\n    SET_INGREDIENT_INDEX,\n    SET_INGREDIENTS_IDS,\n    MOVE_CARD,\n    SET_INGREDIENT_DETAILS,\n    REMOVE_INGREDIENT_DETAILS,\n    GET_ORDER_NUMBER,\n    GET_ORDER_NUMBER_SUCCESS,\n    GET_ORDER_NUMBER_FAILED,\n    RESET_ORDER_NUMBER,\n};\n","import React, { FC, useState } from 'react';\n\nimport headerStyles from './app-header.module.css';\n\nimport AppHeaderItem from './app-header-item/app-header-item';\nimport { BurgerIcon, ListIcon, ProfileIcon, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { TLocationState } from './app-header-types';\nimport { DEPLOY_URL } from '../../services/constants';\n\nconst AppHeader: FC = () => {\n    const { pathname } = useLocation<TLocationState>();\n    const [main, setMainActive] = useState<boolean>(false);\n    const [orders, setOrdersActive] = useState<boolean>(false);\n    const [profile, setProfileActive] = useState<boolean>(false);\n\n    return (\n        <header className={headerStyles.header}>\n            <nav className={headerStyles.header__nav}>\n                <ul className={headerStyles.header__list}>\n                    <AppHeaderItem text=\"Конструктор\" path={`/${DEPLOY_URL}`} setHover={setMainActive}>\n                        <BurgerIcon type={pathname === `/${DEPLOY_URL}` || main ? 'primary' : 'secondary'} />\n                    </AppHeaderItem>\n                    <AppHeaderItem text=\"Лента заказов\" path={`/${DEPLOY_URL}feed`} setHover={setOrdersActive}>\n                        <ListIcon type={pathname === `/${DEPLOY_URL}feed` || orders ? 'primary' : 'secondary'} />\n                    </AppHeaderItem>\n                    <li className={`mt-4 mb-4 ${headerStyles.header__logo}`}>\n                        <Link className={headerStyles.header__link} to={`/${DEPLOY_URL}`}>\n                            <Logo />\n                        </Link>\n                    </li>\n                    <AppHeaderItem text=\"Личный кабинет\" path={`/${DEPLOY_URL}profile`} setHover={setProfileActive}>\n                        <ProfileIcon type={pathname === `/${DEPLOY_URL}profile` || profile ? 'primary' : 'secondary'} />\n                    </AppHeaderItem>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","import { TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook } from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from './thunk-types';\n\n// Теперь этот хук «знает» структуру хранилища\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\n// Хук не даст отправить экшен, который ему не знаком\nexport const useDispatch = (): AppDispatch | AppThunk => dispatchHook<AppDispatch | AppThunk>();\n","import React, { FC } from 'react';\n\nimport { Redirect, Route, useLocation } from 'react-router-dom';\nimport { useSelector } from '../../services/hooks';\nimport { CommonStateType } from '../../services/reducers/reducers-types';\nimport { DEPLOY_URL } from '../../services/constants';\n\ntype TProtectedRouteProps = { path: string; exact: boolean };\n\nconst ProtectedRoute: FC<TProtectedRouteProps> = ({ children, path, ...rest }) => {\n    const user = useSelector((state: CommonStateType) => state.auth.user);\n    const location = useLocation();\n\n    const profilePages: string = `/${DEPLOY_URL}profile` || `/${DEPLOY_URL}profile/orders`;\n\n    if (\n        user &&\n        (path === `/${DEPLOY_URL}login` ||\n            path === `/${DEPLOY_URL}register` ||\n            path === `/${DEPLOY_URL}forgot-password` ||\n            path === `/${DEPLOY_URL}reset-password`)\n    ) {\n        return (\n            <Redirect\n                to={{\n                    pathname: `/${DEPLOY_URL}`,\n                    state: location,\n                }}\n            />\n        );\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                !user && path === profilePages ? <Redirect to={{ pathname: '/react-burger/login' }} /> : children\n            }\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import React, { FC } from 'react';\n\nimport tabsStyles from './ingredients-tabs.module.css';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TIngredientsTabs } from './ingredients-tabs-types';\n\nconst IngredientsTabs: FC<TIngredientsTabs> = ({ activeMeal, changeMeal }) => {\n    return (\n        <div className={tabsStyles.ingredients__tabs}>\n            <Tab value=\"Булки\" active={activeMeal === 'Булки'} onClick={changeMeal}>\n                Булки\n            </Tab>\n            <Tab value=\"Соусы\" active={activeMeal === 'Соусы'} onClick={changeMeal}>\n                Соусы\n            </Tab>\n            <Tab value=\"Начинки\" active={activeMeal === 'Начинки'} onClick={changeMeal}>\n                Начинки\n            </Tab>\n        </div>\n    );\n};\n\nexport default IngredientsTabs;\n","import React, { FC } from 'react';\n\nimport { useDrag } from 'react-dnd';\n\nimport ingredientStyles from './ingredient.module.css';\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { TIngredientProps } from './ingredient-types';\nimport { DEPLOY_URL } from '../../../services/constants';\n\nconst Ingredient: FC<TIngredientProps> = ({ ingredient }) => {\n    const [, ingredientRef] = useDrag({\n        type: 'ingredient',\n        item: ingredient,\n    });\n    const location = useLocation();\n\n    return (\n        <Link\n            to={{\n                pathname: `/${DEPLOY_URL}ingredients/${ingredient._id}`,\n                state: { background: location },\n            }}\n            ref={ingredientRef}\n            className={ingredientStyles.ingredient}\n        >\n            <img src={ingredient.image} alt={ingredient.name} />\n            <div className={`${ingredientStyles.ingredient__priceWrapper} text text_type_digits-default mt-1 mb-1`}>\n                <p className={`${ingredientStyles.ingredient__price} mr-2`}>{ingredient.price}</p>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n            <p className={`text text_type_main-default ${ingredientStyles.ingredient__name}`}>{ingredient.name}</p>\n            {ingredient.ingredientCount && ingredient.ingredientCount > 0 ? (\n                <Counter count={ingredient.ingredientCount} size=\"default\" />\n            ) : null}\n        </Link>\n    );\n};\n\nexport default Ingredient;\n","import React, { FC } from 'react';\nimport { useDispatch } from '../../../services/hooks';\nimport { InView } from 'react-intersection-observer';\n\nimport { SET_ACTIVE_TAB } from '../../../services/constants';\nimport ingredientStyles from './ingredients.module.css';\nimport Ingredient from '../ingredient/ingredient';\nimport { TIngredientsProps, TTabScrollChange } from './ingredients-types';\n\nconst Ingredients: FC<TIngredientsProps> = ({ data }) => {\n    const dispatch = useDispatch();\n\n    const tabScrollChange: TTabScrollChange = (inView, entry) => {\n        if (inView) {\n            dispatch({\n                type: SET_ACTIVE_TAB,\n                tab: entry.target.firstElementChild?.innerHTML,\n            });\n        }\n    };\n\n    return (\n        <div className={`${ingredientStyles.ingredients} mt-10 mb-6 pl-1 pr-1`}>\n            {' '}\n            {\n                <>\n                    <InView as=\"div\" threshold={0.8} onChange={tabScrollChange}>\n                        <h4 className=\"text text_type_main-medium mb-6\">Булки</h4>\n                        <ul className={ingredientStyles.ingredients__list}>\n                            {data.map((item) => {\n                                if (item.type !== 'bun') return null;\n                                return <Ingredient key={item._id} ingredient={item} />;\n                            })}\n                        </ul>\n                    </InView>\n                    <InView as=\"div\" threshold={0.5} onChange={tabScrollChange}>\n                        <h4 className=\"text text_type_main-medium mb-6\">Соусы</h4>\n                        <ul className={ingredientStyles.ingredients__list}>\n                            {data.map((item) => {\n                                if (item.type !== 'sauce') return null;\n                                return <Ingredient key={item._id} ingredient={item} />;\n                            })}\n                        </ul>\n                    </InView>\n                    <InView as=\"div\" threshold={0.2} onChange={tabScrollChange}>\n                        <h4 className=\"text text_type_main-medium mb-6\">Начинки</h4>\n                        <ul className={ingredientStyles.ingredients__list}>\n                            {data.map((item) => {\n                                if (item.type !== 'main') return null;\n                                return <Ingredient key={item._id} ingredient={item} />;\n                            })}\n                        </ul>\n                    </InView>\n                </>\n            }\n        </div>\n    );\n};\n\nexport default Ingredients;\n","import React, { ReactElement } from 'react';\nimport { useDispatch, useSelector } from '../../services/hooks';\n\nimport ingredientsStyles from './burger-ingredients.module.css';\nimport IngredientsTabs from './ingredients-tabs/ingredients-tabs';\nimport Ingredients from './ingredients/ingredients';\nimport { SET_ACTIVE_TAB } from '../../services/constants';\nimport { CommonStateType } from '../../services/reducers/reducers-types';\n\nconst BurgerIngredients = (): ReactElement => {\n    const { ingredients, isLoading, hasError, activeTab } = useSelector((state: CommonStateType) => ({\n        ingredients: state.ingredients.ingredients,\n        isLoading: state.ingredients.ingredientsRequest,\n        hasError: state.ingredients.ingredientsFailed,\n        activeTab: state.ingredients.activeTab,\n    }));\n    const dispatch = useDispatch();\n\n    const onTabClick = (meal: string) => {\n        let mealType = '';\n        switch (meal) {\n            case 'Булки':\n                mealType = 'Булки';\n                break;\n            case 'Соусы':\n                mealType = 'Соусы';\n                break;\n            case 'Начинки':\n                mealType = 'Начинки';\n                break;\n            default:\n                mealType = 'Булки';\n                break;\n        }\n        dispatch({\n            type: SET_ACTIVE_TAB,\n            tab: mealType,\n        });\n    };\n\n    const ingredientsContent = hasError ? (\n        <div className={`text text_type_main-medium ${ingredientsStyles.ingredients__loading}`}>\n            Что-то пошло не так, перезагрузите страницу\n        </div>\n    ) : !isLoading && !hasError && ingredients.length ? (\n        <Ingredients data={ingredients} />\n    ) : (\n        <div className={`text text_type_main-large ${ingredientsStyles.ingredients__loading}`}>\n            Здесь Вы увидите ингредиенты для бургера ...\n        </div>\n    );\n\n    return (\n        <section className={`${ingredientsStyles.ingredients} ml-5 mr-10 pt-10`}>\n            <h2 className=\"text text_type_main-large pb-2\">Соберите бургер</h2>\n            <IngredientsTabs activeMeal={activeTab} changeMeal={onTabClick} />\n            {ingredientsContent}\n        </section>\n    );\n};\n\nexport default BurgerIngredients;\n","import React, { memo, useEffect, useRef, FC, SyntheticEvent } from 'react';\n\nimport { useDispatch } from '../../../services/hooks';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport listStyles from '../constructor-list/constructor-list.module.css';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { DECREASE_INGREDIENT_COUNT, REMOVE_INGREDIENT } from '../../../services/constants';\nimport { TConstructorIngredient } from './constructor-ingredient-types';\n\n// eslint-disable-next-line react/display-name\nexport const ConstructorIngredient: FC<TConstructorIngredient> = memo(\n    // eslint-disable-next-line react/prop-types\n    ({ ingredient, index, moveCard, setIngredientsIndex }) => {\n        const cardRef = useRef<HTMLElement>(null);\n        // eslint-disable-next-line react/prop-types\n        const { _id, name, price, image } = ingredient;\n        const dispatch = useDispatch();\n        const [, drop] = useDrop({\n            accept: 'card',\n            hover: (item: { index: number }, monitor) => {\n                const dragIndex = item.index;\n                const hoverIndex = index;\n\n                // Don't replace items with themselves\n                if (dragIndex === hoverIndex) {\n                    return;\n                }\n                // Determine rectangle on screen\n                const hoverBoundingRect: any = cardRef.current?.getBoundingClientRect();\n                console.log(hoverBoundingRect);\n                // Get vertical middle\n                const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n                // Determine mouse position\n                const clientOffset:\n                    | {\n                          x: number;\n                          y: number;\n                      }\n                    | any = monitor.getClientOffset();\n                // Get pixels to the top\n                const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n                // Only perform the move when the mouse has crossed half of the items height\n                // When dragging downwards, only move when the cursor is below 50%\n                // When dragging upwards, only move when the cursor is above 50%\n                // Dragging downwards\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                    return;\n                }\n                // Dragging upwards\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                    return;\n                }\n\n                moveCard(dragIndex, hoverIndex);\n\n                item.index = hoverIndex;\n            },\n        });\n        const [{ isDragging }, drag] = useDrag({\n            type: 'card',\n            item: () => {\n                return {\n                    _id,\n                    index,\n                };\n            },\n            collect: (monitor) => ({\n                isDragging: monitor.isDragging(),\n            }),\n        });\n\n        const removeIngredient = (e: SyntheticEvent, id: string, index: number) => {\n            const target = e.target as HTMLElement;\n            if (target.closest('.constructor-element__action')) {\n                dispatch({\n                    type: REMOVE_INGREDIENT,\n                    id: id,\n                    index: index,\n                });\n                dispatch({\n                    type: DECREASE_INGREDIENT_COUNT,\n                    ingredientId: _id,\n                });\n            }\n        };\n\n        useEffect(() => {\n            setIngredientsIndex();\n            // eslint-disable-next-line react/prop-types\n        }, [ingredient.index, setIngredientsIndex]);\n\n        const opacity = isDragging ? 0 : 1;\n        drag(drop(cardRef));\n\n        return (\n            <article\n                ref={cardRef}\n                style={{ opacity }}\n                onClick={(e) => removeIngredient(e, _id, index)}\n                className={listStyles.item}\n            >\n                <DragIcon type=\"primary\" />\n                <ConstructorElement text={name} price={price} thumbnail={image} />\n            </article>\n        );\n    },\n);\n","import React, { memo, useEffect, useCallback, FC } from 'react';\nimport { useDispatch, useSelector } from '../../../services/hooks';\nimport { useDrop } from 'react-dnd';\n\n// TODO\n// - изменить логику счетчиков у ингредиентов (сделать чтобы они просто сравнивали массивы свои и массив бургера и по итогу выдавали результат счетчиков)\n\nimport { ConstructorIngredient } from '../constructor-ingredient/constructor-ingredient';\nimport {\n    SET_TOTAL,\n    SET_INGREDIENTS_IDS,\n    ADD_INGREDIENT,\n    MOVE_CARD,\n    SET_INGREDIENT_INDEX,\n} from '../../../services/constants';\nimport { INCREASE_INGREDIENT_COUNT } from '../../../services/constants';\nimport { CommonStateType } from '../../../services/reducers/reducers-types';\nimport { TIngredient } from '../../burger-ingredients/ingredient/ingredient-types';\nimport { TMoveCard } from './constructor-list-types';\n\nimport listStyles from './constructor-list.module.css';\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\n\n// eslint-disable-next-line react/display-name\nexport const ConstructorList: FC = memo(() => {\n    const { bun, ingredients } = useSelector((state: CommonStateType) => ({\n        bun: state.burger.bun,\n        ingredients: state.burger.ingredients,\n    }));\n    const dispatch = useDispatch();\n\n    const moveCard: TMoveCard = (index, atIndex) => {\n        dispatch({\n            type: MOVE_CARD,\n            index: index,\n            atIndex: atIndex,\n        });\n    };\n    const [, listRef] = useDrop({\n        accept: 'ingredient',\n        drop(item: TIngredient) {\n            dispatch({\n                type: ADD_INGREDIENT,\n                ingredient: item,\n            });\n            dispatch({\n                type: INCREASE_INGREDIENT_COUNT,\n                ingredientId: item._id,\n            });\n        },\n    });\n\n    const cartTotal = useCallback(() => {\n        let total = bun.price * 2;\n        ingredients.forEach((ingredient) => {\n            if (ingredient.type !== 'bun') total += ingredient.price;\n        });\n        dispatch({\n            type: SET_TOTAL,\n            total: total,\n        });\n    }, [ingredients, bun.price, dispatch]);\n\n    const setIngredientsIDs = useCallback(() => {\n        const ingredientsIDs = ingredients.map((ingredient) => ingredient._id).concat(bun._id);\n        dispatch({\n            type: SET_INGREDIENTS_IDS,\n            IDs: ingredientsIDs,\n        });\n    }, [ingredients, bun._id, dispatch]);\n\n    useEffect(() => {\n        cartTotal();\n        setIngredientsIDs();\n    }, [bun, ingredients, cartTotal, setIngredientsIDs]);\n\n    const setIngredientsIndex = useCallback(() => {\n        dispatch({\n            type: SET_INGREDIENT_INDEX,\n        });\n    }, [dispatch]);\n\n    const topBunMarkup = (\n        <article className={listStyles.bothSides}>\n            <ConstructorElement\n                type=\"top\"\n                isLocked={true}\n                text={bun.name + ' (верх)'}\n                price={bun.price}\n                thumbnail={bun.image}\n            />\n        </article>\n    );\n\n    const bottomBunMarkup = (\n        <article className={listStyles.bothSides}>\n            <ConstructorElement\n                type=\"bottom\"\n                isLocked={true}\n                text={bun.name + ' (низ)'}\n                price={bun.price}\n                thumbnail={bun.image}\n            />\n        </article>\n    );\n\n    const renderIngredients = (ingredient: TIngredient, index: number) => {\n        return (\n            <ConstructorIngredient\n                key={index}\n                ingredient={ingredient}\n                index={index}\n                moveCard={moveCard}\n                setIngredientsIndex={setIngredientsIndex}\n            />\n        );\n    };\n\n    const ingredientsMarkup = (\n        <div className={listStyles.constructorList}>\n            {!ingredients.length ? (\n                <h3 className=\"text text_type_main-medium text_color_inactive pl-10 pt-1 pl-7\">\n                    А теперь выберите ингредиенты для бургера\n                </h3>\n            ) : (\n                ingredients.map((ingredient, index) => renderIngredients(ingredient, index))\n            )}\n        </div>\n    );\n\n    const content = !Object.keys(bun).length ? (\n        <h3 className=\"text text_type_main-medium pt-10 text_color_inactive\">\n            Для начала выберите булку для бургера - перетащите ее прямо сюда\n        </h3>\n    ) : (\n        <>\n            {topBunMarkup} {ingredientsMarkup} {bottomBunMarkup}\n        </>\n    );\n\n    return (\n        <div ref={listRef} onDrop={(e) => e.preventDefault()} className={listStyles.commonList}>\n            {content}\n        </div>\n    );\n});\n","import React, { FC } from 'react';\n\nimport popupStyles from './popup.module.css';\nimport { TModalOverlayProps } from './modal-types';\n\nconst ModalOverlay: FC<TModalOverlayProps> = ({ onClose, children }) => {\n    return (\n        <div className={popupStyles.popup__overlay} onClick={onClose}>\n            {children}\n        </div>\n    );\n};\n\nexport default ModalOverlay;\n","import React, { FC, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport ModalOverlay from './modal-overlay';\nimport popupStyles from './popup.module.css';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TModalProps } from './modal-types';\n\nconst modalRoot: Element = document.getElementById('react-modals')!;\n\nconst Modal: FC<TModalProps> = ({ title, onClose, children }) => {\n    useEffect(() => {\n        function onEscKeyDown(e: KeyboardEvent): void {\n            if (e.key === 'Escape') onClose(e);\n        }\n        document.addEventListener('keydown', onEscKeyDown);\n        return () => {\n            document.removeEventListener('keydown', onEscKeyDown);\n        };\n    }, [onClose]);\n\n    return createPortal(\n        <ModalOverlay onClose={onClose}>\n            <div\n                className={`${popupStyles.popup__content} pt-10 pb-15 pl-10 pr-10`}\n                onClick={(e) => e.stopPropagation()}\n            >\n                <div className={`mb-4 ${popupStyles.popup__base}`}>\n                    {title && <h3 className={`text text_type_main-large ${popupStyles.popup__title}`}>{title}</h3>}\n                    <div onClick={onClose} className={popupStyles.popup__cross}>\n                        <CloseIcon type=\"primary\" />\n                    </div>\n                </div>\n                {children}\n            </div>\n        </ModalOverlay>,\n        modalRoot,\n    );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/done.7341dd32.svg\";","import { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { format } from 'date-fns';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\nimport { ru } from 'date-fns/locale';\nimport { TIngredient } from '../components/burger-ingredients/ingredient/ingredient-types';\nimport { TFeedOrder } from '../components/feed/feed';\n\ntype TForm = {\n    email?: string;\n    password?: string;\n    name?: string;\n    code?: string;\n};\n\ntype TFormHandler = (e: ChangeEvent<HTMLInputElement>, setForm: Dispatch<SetStateAction<any>>, form: TForm) => void;\n\nexport const formHandler: TFormHandler = (e, setForm, form) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n};\n\nexport const setCookie = (\n    name: string,\n    value: string,\n    props: { path?: string; expires?: Date | string } = {},\n): void => {\n    props = {\n        path: '/', //задаем корневой адрес для cookies\n        ...props,\n    };\n    let exp = props.expires;\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n    if (typeof exp != 'string') {\n        if (exp && exp.toUTCString) {\n            props.expires = exp.toUTCString();\n        }\n    }\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const propValue = props[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n};\n\nexport function getCookie(name: string): string | undefined {\n    const matches = document.cookie.match(\n        // eslint-disable-next-line\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const dataFunc = (date: string): string => {\n    let result = '';\n    const currentDate = new Date(date);\n    isToday(currentDate)\n        ? (result += 'Сегодня, ')\n        : isYesterday(currentDate)\n        ? (result += 'Вчера, ')\n        : (result += `${formatDistanceToNow(currentDate, { locale: ru })} назад, `);\n    return (result += `\n    ${format(new Date(currentDate), 'H:mm', { locale: ru })}\n    i-${format(new Date(currentDate), 'z', { locale: ru })} \n  `);\n};\n\nexport const orderSumFunc = (IDs: Array<string>, ingredients: Array<TIngredient>): number => {\n    let result = 0;\n    IDs.forEach((id: string) => {\n        const currentIgd = ingredients.find((ingredient: TIngredient) => ingredient._id === id);\n        if (currentIgd && currentIgd.type === 'bun') result += currentIgd.price * 2;\n        if (currentIgd && currentIgd.type !== 'bun') result += currentIgd.price;\n    });\n    return result;\n};\n\nexport const orderIngredients = (order: TFeedOrder, ingredients: Array<TIngredient>): Array<TIngredient> | null => {\n    if (order) {\n        const result = order.ingredients.reduce((arr: Array<TIngredient>, ingredientID) => {\n            for (const item of arr) {\n                if (item._id === ingredientID) {\n                    item.ingredientOrderCount += 1;\n                    return arr;\n                }\n            }\n            const currentIngredient = ingredients.find((ingredient: TIngredient) => ingredient._id === ingredientID);\n            if (currentIngredient) {\n                if (currentIngredient.type === 'bun') {\n                    currentIngredient.ingredientOrderCount += 2;\n                } else currentIngredient.ingredientOrderCount += 1;\n                arr.push(currentIngredient);\n            }\n\n            return arr;\n        }, []);\n\n        console.log(result);\n\n        return result;\n    }\n\n    return null;\n};\n","import {\n    REQUEST_URL,\n    GET_ORDER_NUMBER,\n    GET_ORDER_NUMBER_SUCCESS,\n    GET_ORDER_NUMBER_FAILED,\n    RESET_ORDER_NUMBER,\n} from '../constants';\nimport { AppThunk, AppDispatch } from '../thunk-types';\nimport { getCookie } from '../../utils';\n\nconst setOrderNumber = (number: number) => {\n    return {\n        type: GET_ORDER_NUMBER_SUCCESS,\n        number,\n    };\n};\n\nexport interface IGetOrderNumber {\n    readonly type: typeof GET_ORDER_NUMBER;\n}\n\nexport interface IGetOrderNumberSuccess {\n    readonly type: typeof GET_ORDER_NUMBER_SUCCESS;\n    readonly number: number;\n}\n\nexport interface IGetOrderNumberFailed {\n    readonly type: typeof GET_ORDER_NUMBER_FAILED;\n}\n\nexport interface IResetOrderNumber {\n    readonly type: typeof RESET_ORDER_NUMBER;\n}\n\nexport type TOrderDetailsActions = IGetOrderNumber | IGetOrderNumberSuccess | IGetOrderNumberFailed | IResetOrderNumber;\n\nexport const getOrderNumber: AppThunk = (orderIDs: Array<string>) => (dispatch: AppDispatch) => {\n    dispatch({\n        type: GET_ORDER_NUMBER,\n    });\n    const token = getCookie('accessToken');\n\n    fetch(REQUEST_URL + '/orders', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n            ingredients: orderIDs,\n        }),\n    })\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((res) => {\n                    dispatch(setOrderNumber(res.order.number));\n                    // return res.order.number;\n                });\n            } else {\n                dispatch({\n                    type: GET_ORDER_NUMBER_FAILED,\n                });\n            }\n        })\n        .catch(() => {\n            dispatch({\n                type: GET_ORDER_NUMBER_FAILED,\n            });\n        });\n};\n","import React, { ReactElement, useEffect } from 'react';\n\nimport orderStyles from './order-details.module.css';\nimport doneButton from '../../images/done.svg';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { getOrderNumber } from '../../services/actions/order-details';\nimport { CommonStateType } from '../../services/reducers/reducers-types';\n\nconst OrderDetails = (): ReactElement => {\n    const { ingredientIDs, orderNumber, orderNumberRequest, orderNumberFailed } = useSelector(\n        (state: CommonStateType) => ({\n            ingredientIDs: state.burger.ingredientIDs,\n            orderNumber: state.order.number,\n            orderNumberRequest: state.order.orderNumberRequest,\n            orderNumberFailed: state.order.orderNumberFailed,\n        }),\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getOrderNumber(ingredientIDs));\n    }, [dispatch, ingredientIDs]);\n\n    return orderNumberRequest ? (\n        <h4 className={`text text_type_main-medium mb-15 ${orderStyles.order__text_type_centered}`}>\n            Ожидайте заказ формируется\n        </h4>\n    ) : orderNumberFailed ? (\n        <h4 className={`text text_type_main-medium mb-15 ${orderStyles.order__text_type_centered}`}>\n            Что-то пошло не так, попробуйте заново\n        </h4>\n    ) : (\n        <>\n            <p className={`text text_type_digits-large ml-15 mr-15 mb-8 ${orderStyles.order__number}`}>{orderNumber}</p>\n            <h4 className={`text text_type_main-medium mb-15 ${orderStyles.order__text_type_centered}`}>\n                идентификатор заказа\n            </h4>\n            <img className={orderStyles.order__done} src={doneButton} alt=\"подтвердить заказ\" />\n            <p className={`text text_type_main-default mt-15 mb-2 ${orderStyles.order__text_type_centered}`}>\n                Ваш заказ начали готовить\n            </p>\n            <p className={`text text_type_main-default ${orderStyles.order__text_type_centered}`}>\n                Дождитесь готовности на орбитальной станции\n            </p>\n        </>\n    );\n};\n\nexport default OrderDetails;\n","import React, { useState, FC } from 'react';\n\nimport { useDispatch, useSelector } from '../../../services/hooks';\n\nimport totalStyles from './constructor-cart.module.css';\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport Modal from '../../modal/modal';\nimport OrderDetails from '../../order-details/order-details';\nimport { DEPLOY_URL, RESET_ORDER_NUMBER } from '../../../services/constants';\nimport { useHistory } from 'react-router-dom';\nimport { CommonStateType } from '../../../services/reducers/reducers-types';\nimport { THistoryState } from './constructor-cart-types';\n\nconst ConstructorCart: FC = () => {\n    const [visibleModal, setVisibleModal] = useState(false);\n    const { total, user } = useSelector((state: CommonStateType) => ({\n        total: state.burger.total,\n        user: state.auth.user,\n    }));\n    const dispatch = useDispatch();\n    const history = useHistory<THistoryState>();\n\n    const openModal = (): void => {\n        setVisibleModal(true);\n    };\n\n    const closeModal = (): void => {\n        setVisibleModal(false);\n        dispatch({\n            type: RESET_ORDER_NUMBER,\n        });\n    };\n\n    const modal = (\n        <Modal onClose={closeModal}>\n            <OrderDetails />\n        </Modal>\n    );\n\n    const orderHandler = (): void => {\n        user\n            ? openModal()\n            : history.replace({\n                  pathname: `${DEPLOY_URL}login`,\n              });\n    };\n\n    return total ? (\n        <div className={`${totalStyles.constructor__total} mt-10 mb-9`}>\n            <p className={`${totalStyles.constructor__price} text text_type_digits-medium`}>{total}</p>\n            <CurrencyIcon type=\"primary\" />\n            <Button onClick={orderHandler} type=\"primary\" size=\"large\">\n                Оформить заказ\n            </Button>\n            {visibleModal && modal}\n        </div>\n    ) : null;\n};\n\nexport default ConstructorCart;\n","import React, { ReactElement } from 'react';\n\nimport constructorStyles from './burger-constructor.module.css';\n\nimport { ConstructorList } from './constructor-list/constructor-list';\nimport ConstructorCart from './constructor-cart/constructor-cart';\n\nconst BurgerConstructor = (): ReactElement => {\n    return (\n        <section className={`${constructorStyles.constructor} mr-5 pt-25 pr-4 pl-4`}>\n            <ConstructorList />\n            <ConstructorCart />\n        </section>\n    );\n};\n\nexport default BurgerConstructor;\n","import React, { ReactElement } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport homeStyles from './home.module.css';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\n\nexport const HomePage = (): ReactElement => {\n    return (\n        <main className={homeStyles.main}>\n            <DndProvider backend={HTML5Backend}>\n                <BurgerIngredients />\n                <BurgerConstructor />\n            </DndProvider>\n        </main>\n    );\n};\n","import React, { FC } from 'react';\n\nimport formStyles from './auth-form.module.css';\n\nconst AuthForm: FC = ({ children }) => {\n    return <div className={formStyles.auth}>{children}</div>;\n};\n\nexport default AuthForm;\n","import { REQUEST_URL } from './constants';\nimport { setCookie } from '../utils';\n\ntype optionsFetchWithRequest = {\n    method: string;\n    headers: {\n        Authorization?: string;\n        'Content-Type': string;\n    };\n    body?: string;\n};\n\nexport const checkResponse = (res: Response): Promise<any> => {\n    return res.ok ? res.json() : res.json().then((err: string) => Promise.reject(err));\n};\n\nexport const refreshToken = (): Promise<any> => {\n    return fetch(`${REQUEST_URL}/auth/token`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken'),\n        }),\n    }).then(checkResponse);\n};\n\nexport const fetchWithRefresh = async (url: string, options: optionsFetchWithRequest): Promise<any> => {\n    try {\n        const res = await fetch(url, options);\n        return await checkResponse(res);\n    } catch (err: any) {\n        if (err.message === 'jwt expired') {\n            const refreshData = await refreshToken(); //обновляем токен\n            localStorage.setItem('refreshToken', refreshData.refreshToken);\n            setCookie('accessToken', refreshData.accessToken);\n            options.headers.Authorization = refreshData.accessToken;\n            const res = await fetch(url, options); //повторяем запрос\n            return await checkResponse(res);\n        } else {\n            return Promise.reject(err);\n        }\n    }\n};\n","import { AUTHORIZE_USER, LOGOUT, REQUEST_URL, SET_USER } from '../constants';\nimport { setCookie, getCookie } from '../../utils';\nimport { fetchWithRefresh, checkResponse } from '../api';\nimport { AppThunk, AppDispatch } from '../thunk-types';\nimport {\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    AUTHORIZE_USER_SUCCESS,\n    AUTHORIZE_USER_FAILED,\n    REFRESH_TOKEN,\n    REFRESH_TOKEN_SUCCESS,\n    REFRESH_TOKEN_FAILED,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILED,\n    SET_PASSWORD_RESET,\n} from '../constants';\n\ntype TUserData = { email: string; name: string };\n\nexport const actionCreators = {\n    getUser: (user: TUserData) => ({ type: GET_USER_SUCCESS, user }),\n    getUserFailed: () => ({ type: GET_USER_FAILED }),\n    refreshToken: () => ({ type: REFRESH_TOKEN }),\n    refreshTokenFailed: () => ({ type: REFRESH_TOKEN_FAILED }),\n    setPasswordReset: () => ({ type: SET_PASSWORD_RESET, passwordIsReset: true }),\n    setNewUser: (user: TUserData) => ({ type: REGISTER_USER_SUCCESS, user }),\n    setNewUserFailed: () => ({ type: REGISTER_USER_FAILED }),\n    authorizeUser: (user: TUserData) => ({ type: AUTHORIZE_USER_SUCCESS, user }),\n    authorizeUserFailed: () => ({ type: AUTHORIZE_USER_FAILED }),\n    setUserLogout: () => ({ type: LOGOUT_SUCCESS, user: null }),\n    logoutFailed: () => ({ type: LOGOUT_FAILED }),\n};\n\nexport interface IGetUserSuccess {\n    readonly type: typeof GET_USER_SUCCESS;\n    readonly user: {\n        readonly name: string;\n        readonly email: string;\n    };\n}\n\nexport interface IGetUserFailed {\n    readonly type: typeof GET_USER_FAILED;\n}\n\nexport interface ISetUser {\n    readonly type: typeof SET_USER;\n    readonly user: {\n        readonly name: string;\n        readonly email: string;\n    };\n}\n\nexport interface IRegisterUser {\n    readonly type: typeof REGISTER_USER;\n}\n\nexport interface IRegisterUserSuccess {\n    readonly type: typeof REGISTER_USER_SUCCESS;\n    readonly user: {\n        readonly name: string;\n        readonly email: string;\n    };\n}\n\nexport interface IRegisterUserFailed {\n    readonly type: typeof REGISTER_USER_FAILED;\n}\n\nexport interface IAuthorizeUser {\n    readonly type: typeof AUTHORIZE_USER;\n}\n\nexport interface IAuthorizeUserSuccess {\n    readonly type: typeof AUTHORIZE_USER_SUCCESS;\n    readonly user: {\n        readonly name: string;\n        readonly email: string;\n    };\n}\n\nexport interface IAuthorizeUserFailed {\n    readonly type: typeof AUTHORIZE_USER_FAILED;\n}\n\nexport interface IRefreshToken {\n    readonly type: typeof REFRESH_TOKEN;\n}\n\nexport interface IRefreshTokenSuccess {\n    readonly type: typeof REFRESH_TOKEN_SUCCESS;\n}\n\nexport interface IRefreshTokenFailed {\n    readonly type: typeof REFRESH_TOKEN_FAILED;\n}\n\nexport interface ILogout {\n    readonly type: typeof LOGOUT;\n}\n\nexport interface ILogoutSuccess {\n    readonly type: typeof LOGOUT_SUCCESS;\n    readonly user: {\n        readonly name: string;\n        readonly email: string;\n    };\n}\n\nexport interface ILogoutFailed {\n    readonly type: typeof LOGOUT_FAILED;\n}\n\nexport interface ISetPasswordReset {\n    readonly type: typeof SET_PASSWORD_RESET;\n    passwordIsReset: boolean;\n}\n\nexport type TAuthUserActions =\n    | IGetUserSuccess\n    | IGetUserFailed\n    | ISetUser\n    | IRegisterUser\n    | IRegisterUserSuccess\n    | IRegisterUserFailed\n    | IAuthorizeUser\n    | IAuthorizeUserSuccess\n    | IAuthorizeUserFailed\n    | IRefreshToken\n    | IRefreshTokenSuccess\n    | IRefreshTokenFailed\n    | ILogout\n    | ILogoutSuccess\n    | ILogoutFailed\n    | ISetPasswordReset;\n\nexport const getUserInfo: AppThunk = (token: string) => (dispatch: AppDispatch) => {\n    fetchWithRefresh(`${REQUEST_URL}/auth/user`, {\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + token,\n            'Content-Type': 'application/json',\n        },\n    })\n        .then((data) => {\n            if (data.success) {\n                dispatch(actionCreators.getUser(data.user));\n            } else {\n                throw Error('Error user request');\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.getUserFailed());\n        });\n};\n\nexport const updateUserInfo: AppThunk = (form, token) => (dispatch: AppDispatch) => {\n    fetchWithRefresh(`${REQUEST_URL}/auth/user`, {\n        method: 'PATCH',\n        headers: {\n            Authorization: 'Bearer ' + token,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(form),\n    })\n        .then((data) => {\n            if (data.success) {\n                dispatch(actionCreators.getUser(data.user));\n            } else {\n                throw Error('Error user request');\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.getUserFailed());\n        });\n};\n\nexport const forgotPassword: AppThunk = (email) => (dispatch: AppDispatch) => {\n    return fetchWithRefresh(`${REQUEST_URL}/password-reset`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            email: email,\n        }),\n    })\n        .then((res) => {\n            if (res.success && res.message === 'Reset email sent') {\n                dispatch(actionCreators.setPasswordReset());\n            }\n        })\n        .catch((e) => console.log(e));\n};\n\nexport const resetPassword: AppThunk = (password, code) => () => {\n    fetchWithRefresh(`${REQUEST_URL}/password-reset/reset`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            password: password,\n            token: code,\n        }),\n    })\n        .then(checkResponse)\n        .catch((err) => console.log(err));\n};\n\nexport const registerRequest: AppThunk = (form) => (dispatch: AppDispatch) => {\n    dispatch({\n        type: REGISTER_USER,\n    });\n\n    fetch(`${REQUEST_URL}/auth/register`, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(form),\n    })\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((data) => {\n                    const token = data.accessToken.split(' ')[1];\n                    if (data.refreshToken && token) {\n                        setCookie('accessToken', token);\n                        localStorage.setItem('refreshToken', data.refreshToken);\n                    }\n                    dispatch(actionCreators.setNewUser(data.user));\n                });\n            } else {\n                dispatch(actionCreators.setNewUserFailed());\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.setNewUserFailed());\n        });\n};\n\nexport const loginRequest: AppThunk = (form) => (dispatch: AppDispatch) => {\n    dispatch(actionCreators.refreshToken());\n\n    fetch(`${REQUEST_URL}/auth/login`, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(form),\n    })\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((data) => {\n                    const token = data.accessToken.split(' ')[1];\n                    if (token && data.refreshToken) {\n                        setCookie('accessToken', token);\n                        localStorage.setItem('refreshToken', data.refreshToken);\n                    }\n                    dispatch(actionCreators.authorizeUser(data.user));\n                });\n            } else {\n                dispatch(actionCreators.authorizeUserFailed());\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.authorizeUserFailed());\n        });\n};\n\nexport const refreshToken: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch(actionCreators.refreshToken());\n\n    const refreshToken = getCookie('refreshToken');\n\n    fetch(`${REQUEST_URL}/auth/token`, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({\n            token: refreshToken,\n        }),\n    })\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((data) => {\n                    const token = data.accessToken.split(' ')[1];\n                    if (token && data.refreshToken) {\n                        setCookie('accessToken', token);\n                        localStorage.setItem('refreshToken', data.refreshToken);\n                    }\n                    dispatch({\n                        type: REFRESH_TOKEN_SUCCESS,\n                    });\n                });\n            } else {\n                dispatch(actionCreators.refreshTokenFailed());\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.refreshTokenFailed());\n        });\n};\n\nexport const logoutRequest: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch({\n        type: REGISTER_USER,\n    });\n\n    const refreshToken = localStorage.getItem('refreshToken');\n\n    fetch(`${REQUEST_URL}/auth/logout`, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({\n            token: refreshToken,\n        }),\n    })\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((data) => {\n                    if (data.success) {\n                        setCookie('accessToken', '');\n                        localStorage.removeItem('refreshToken');\n                        dispatch(actionCreators.setUserLogout());\n                    } else {\n                        dispatch(actionCreators.logoutFailed());\n                    }\n                });\n            }\n        })\n        .catch(() => {\n            dispatch(actionCreators.logoutFailed());\n        });\n};\n","import React, { ReactElement, useCallback, useRef, useState } from 'react';\n\nimport loginStyles from './login.module.css';\nimport AuthForm from '../components/auth-form/auth-form';\nimport { formHandler as onChange } from '../utils';\nimport formStyles from '../components/auth-form/auth-form.module.css';\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link } from 'react-router-dom';\nimport { loginRequest } from '../services/actions/auth';\nimport { useDispatch } from 'react-redux';\nimport { TICons } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons';\nimport { DEPLOY_URL } from '../services/constants';\n\nexport type TForm = {\n    email: string;\n    password: string;\n};\n\nexport const LoginPage = (): ReactElement => {\n    const [passwordInputIcon, setIcon] = useState<keyof TICons>('ShowIcon');\n    const [form, setForm] = useState<TForm>({\n        email: '',\n        password: '',\n    });\n    const passwordRef = useRef<HTMLInputElement>(null);\n\n    const dispatch = useDispatch();\n\n    const onIconClick = useCallback(() => {\n        if (passwordRef.current) {\n            if (passwordRef.current.type === 'password') {\n                passwordRef.current.type = 'text';\n                setIcon('HideIcon');\n            } else {\n                passwordRef.current.type = 'password';\n                setIcon('ShowIcon');\n            }\n        }\n    }, [passwordRef]);\n\n    const login = useCallback(\n        (e) => {\n            e.preventDefault();\n            dispatch(loginRequest(form));\n        },\n        [dispatch, form],\n    );\n\n    return (\n        <div className={loginStyles.main}>\n            <AuthForm>\n                <form className={formStyles.form} onSubmit={login}>\n                    <h2 className={`text text_type_main-medium mb-6 ${formStyles.title}`}>Вход</h2>\n                    <Input\n                        type={'email'}\n                        placeholder={'E-mail'}\n                        value={form.email}\n                        onChange={(e) => onChange(e, setForm, form)}\n                        name={'email'}\n                        size={'default'}\n                    />\n                    <Input\n                        type={'password'}\n                        placeholder={'Пароль'}\n                        value={form.password}\n                        onChange={(e) => onChange(e, setForm, form)}\n                        name={'password'}\n                        icon={passwordInputIcon}\n                        ref={passwordRef}\n                        onIconClick={onIconClick}\n                        size={'default'}\n                    />\n                    <Button type=\"primary\" size=\"medium\">\n                        Войти\n                    </Button>\n                </form>\n                <p className={`${formStyles.auth__text} text text_type_main-default mt-4`}>\n                    Вы новый пользователь?\n                    <Link to={`/${DEPLOY_URL}register`} className={formStyles.auth__link}>\n                        Зарегистрироваться\n                    </Link>\n                </p>\n                <p className={`${formStyles.auth__text} text text_type_main-default mt-4`}>\n                    Забыли пароль?\n                    <Link to={`/${DEPLOY_URL}forgot-password`} className={formStyles.auth__link}>\n                        Восстановить пароль\n                    </Link>\n                </p>\n            </AuthForm>\n        </div>\n    );\n};\n","import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport notFoundStyles from './notFound.module.css';\nimport { DEPLOY_URL } from '../services/constants';\n\nexport const NotFoundPage = (): ReactElement => {\n    return (\n        <div className={`${notFoundStyles.notFound} text text_type_main-medium`}>\n            <h2 className=\"text text_type_digits-large text_color_inactive\">404</h2>\n            Тут пусто. <br />\n            Вернитесь назад или перейдите на\n            <Link className={notFoundStyles.link} to={`/${DEPLOY_URL}`}>\n                Главную\n            </Link>\n        </div>\n    );\n};\n","import React, { useState, useCallback, ReactElement } from 'react';\n\nimport registerStyles from './register.module.css';\nimport AuthForm from '../components/auth-form/auth-form';\nimport { formHandler as onChange } from '../utils';\nimport formStyles from '../components/auth-form/auth-form.module.css';\nimport { registerRequest } from '../services/actions/auth';\n\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CommonStateType } from '../services/reducers/reducers-types';\nimport { DEPLOY_URL } from '../services/constants';\n\nexport type TForm = {\n    email: string;\n    name: string;\n    password: string;\n};\n\nexport const RegisterPage = (): ReactElement => {\n    const user = useSelector((state: CommonStateType) => state.auth.user);\n    const [form, setForm] = useState<TForm>({\n        email: '',\n        password: '',\n        name: '',\n    });\n    const dispatch = useDispatch();\n\n    const register = useCallback(\n        (e) => {\n            e.preventDefault();\n            dispatch(registerRequest(form));\n        },\n        [dispatch, form],\n    );\n\n    return (\n        <div className={registerStyles.main}>\n            {!user ? (\n                <AuthForm>\n                    <form className={formStyles.form} onSubmit={register}>\n                        <h2 className={`text text_type_main-medium mb-6 ${formStyles.title}`}>Регистрация</h2>\n                        <Input\n                            type={'text'}\n                            placeholder={'Имя'}\n                            value={form.name}\n                            onChange={(e) => onChange(e, setForm, form)}\n                            name={'name'}\n                            size={'default'}\n                        />\n                        <Input\n                            type={'email'}\n                            placeholder={'E-mail'}\n                            value={form.email}\n                            onChange={(e) => onChange(e, setForm, form)}\n                            name={'email'}\n                            size={'default'}\n                        />\n                        <Input\n                            type={'password'}\n                            placeholder={'Пароль'}\n                            value={form.password}\n                            onChange={(e) => onChange(e, setForm, form)}\n                            name={'password'}\n                            icon={'ShowIcon'}\n                            size={'default'}\n                        />\n                        <Button type=\"primary\" size=\"medium\">\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                    <p className={`${formStyles.auth__text} text text_type_main-default mt-4`}>\n                        Уже зарегистрированы?{' '}\n                        <Link to={`/${DEPLOY_URL}login`} className={formStyles.auth__link}>\n                            Войти\n                        </Link>\n                    </p>\n                </AuthForm>\n            ) : (\n                <Redirect to={`/${DEPLOY_URL}`} />\n            )}\n        </div>\n    );\n};\n","import React, { ReactElement, useCallback, useState } from 'react';\n\nimport registerStyles from './register.module.css';\nimport AuthForm from '../components/auth-form/auth-form';\nimport formStyles from '../components/auth-form/auth-form.module.css';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { forgotPassword } from '../services/actions/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CommonStateType } from '../services/reducers/reducers-types';\nimport { DEPLOY_URL } from '../services/constants';\nconst emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n\nexport const ForgotPasswordPage = (): ReactElement => {\n    const [email, setEmail] = useState('');\n    const [error, setError] = useState(false);\n    const isPasswordReset = useSelector((state: CommonStateType) => state.auth.passwordReset);\n    const dispatch = useDispatch();\n\n    const onSubmit = useCallback(\n        (e) => {\n            e.preventDefault();\n            if (email.match(emailPattern)) {\n                try {\n                    dispatch(forgotPassword(email));\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                setError(true);\n            }\n        },\n        [dispatch, email],\n    );\n\n    return !isPasswordReset ? (\n        <div className={registerStyles.main}>\n            <AuthForm>\n                <form className={formStyles.form} onSubmit={onSubmit}>\n                    <h2 className={`text text_type_main-medium mb-6 ${formStyles.title}`}>Восстановление пароля</h2>\n                    <Input\n                        type={'email'}\n                        placeholder={'Укажите e-mail'}\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                            if (error) setError(false);\n                        }}\n                        value={email}\n                        name={'email'}\n                        error={error}\n                        errorText={'Неверный формат email'}\n                        size={'default'}\n                    />\n                    <Button type=\"primary\" size=\"medium\">\n                        Восстановить\n                    </Button>\n                </form>\n                <p className={`${formStyles.auth__text} text text_type_main-default mt-4`}>\n                    Вспомнили пароль?{' '}\n                    <Link to={`/${DEPLOY_URL}login`} className={formStyles.auth__link}>\n                        Войти\n                    </Link>\n                </p>\n            </AuthForm>\n        </div>\n    ) : (\n        <Redirect to={`/${DEPLOY_URL}reset-password`} />\n    );\n};\n","import React, { ReactElement, SyntheticEvent, useState } from 'react';\nimport registerStyles from './register.module.css';\nimport AuthForm from '../components/auth-form/auth-form';\nimport formStyles from '../components/auth-form/auth-form.module.css';\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { resetPassword } from '../services/actions/auth';\nimport { DEPLOY_URL, SET_PASSWORD_RESET } from '../services/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CommonStateType } from '../services/reducers/reducers-types';\n\nexport const ResetPasswordPage = (): ReactElement => {\n    const [password, setPassword] = useState<string>('');\n    const [code, setCode] = useState<string>('');\n    const [passError, setPassError] = useState<boolean>(false);\n    const [codeError, setCodeError] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const isPasswordReset = useSelector((state: CommonStateType) => state.auth.passwordReset);\n\n    const onSubmit = (e: SyntheticEvent) => {\n        e.preventDefault();\n        if (password && code) {\n            try {\n                dispatch(resetPassword(password, code));\n                dispatch({\n                    type: SET_PASSWORD_RESET,\n                    passwordIsReset: false,\n                });\n                history.replace({\n                    pathname: `/${DEPLOY_URL}login`,\n                });\n            } catch (e) {\n                console.log(e);\n            }\n        } else {\n            passError && codeError ? setPassError(true) : passError ? setPassError(true) : setCodeError(true);\n        }\n    };\n\n    return isPasswordReset ? (\n        <div className={registerStyles.main}>\n            <AuthForm>\n                <form className={formStyles.form} onSubmit={onSubmit}>\n                    <h2 className={`text text_type_main-medium mb-6 ${formStyles.title}`}>Восстановление пароля</h2>\n                    <Input\n                        type=\"password\"\n                        placeholder=\"Введите новый пароль\"\n                        value={password}\n                        onChange={(e) => {\n                            setPassword(e.target.value);\n                            setPassError(false);\n                        }}\n                        name={'password'}\n                        error={passError}\n                        errorText={'Поле не может быть пустым'}\n                        size={'default'}\n                    />\n                    <Input\n                        type={undefined}\n                        placeholder=\"Введите код из письма\"\n                        value={code}\n                        onChange={(e) => {\n                            setCode(e.target.value);\n                            setCodeError(false);\n                        }}\n                        name={'code'}\n                        error={codeError}\n                        errorText={'Поле не может быть пустым'}\n                        size={'default'}\n                    />\n                    <Button type=\"primary\" size=\"medium\">\n                        Сохранить\n                    </Button>\n                </form>\n                <p className={`${formStyles.auth__text} text text_type_main-default mt-4`}>\n                    Вспомнили пароль?{' '}\n                    <Link to={`/${DEPLOY_URL}login`} className={formStyles.auth__link}>\n                        Войти\n                    </Link>\n                </p>\n            </AuthForm>\n        </div>\n    ) : (\n        <Redirect to={`/${DEPLOY_URL}forgot-password`} />\n    );\n};\n","import React, { ReactElement, RefObject, useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './profile-edit.module.css';\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { formHandler as onChange, getCookie } from '../../../utils';\nimport { updateUserInfo } from '../../../services/actions/auth';\nimport { SET_USER } from '../../../services/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CommonStateType } from '../../../services/reducers/reducers-types';\n\nconst onFocusInput = (inputRef: RefObject<HTMLInputElement>) =>\n    inputRef.current ? inputRef.current.classList.add(`${styles.input_isActive}`) : null;\nconst onBlurInput = (inputRef: RefObject<HTMLInputElement>) =>\n    inputRef.current ? inputRef.current.classList.remove(`${styles.input_isActive}`) : null;\nconst onIconClick = (inputRef: RefObject<HTMLInputElement>) => (inputRef.current ? inputRef.current.focus() : null);\n\ntype TForm = {\n    name: string;\n    login: string;\n    password: string;\n};\n\nconst ProfileEdit = (): ReactElement => {\n    const [form, setForm] = useState<TForm>({\n        name: '',\n        login: '',\n        password: '',\n    });\n    const user = useSelector((state: CommonStateType) => state.auth.user);\n    const nameRef = useRef<HTMLInputElement>(null);\n    const loginRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n    const dispatch = useDispatch();\n\n    const resetChanges = useCallback(\n        (e) => {\n            e.preventDefault();\n            if (user) {\n                setForm({\n                    ...form,\n                    name: user.name,\n                    login: user.email,\n                    password: '',\n                });\n            }\n        },\n        [user, form],\n    );\n\n    const updateInfo = useCallback(\n        (e) => {\n            e.preventDefault();\n            const token = getCookie('accessToken');\n            try {\n                dispatch(updateUserInfo(form, token));\n                dispatch({\n                    type: SET_USER,\n                    user: {\n                        name: form.name,\n                        login: form.login,\n                    },\n                });\n            } catch (err) {\n                console.log(err);\n            }\n        },\n        [dispatch, form],\n    );\n\n    useEffect(() => {\n        if (user) {\n            setForm({\n                ...form,\n                name: user.name,\n                login: user.email,\n            });\n        }\n    }, []);\n\n    return (\n        <form className={styles.inputs} onSubmit={updateInfo}>\n            <Input\n                type={'text'}\n                placeholder={'Имя'}\n                value={form.name}\n                icon={'EditIcon'}\n                onChange={(e) => onChange(e, setForm, form)}\n                ref={nameRef}\n                name={'name'}\n                onFocus={() => onFocusInput(nameRef)}\n                onBlur={() => onBlurInput(nameRef)}\n                onIconClick={() => onIconClick(nameRef)}\n                size={'default'}\n            />\n            <Input\n                type={'text'}\n                placeholder={'Логин'}\n                value={form.login}\n                icon={'EditIcon'}\n                onChange={(e) => onChange(e, setForm, form)}\n                name={'login'}\n                ref={loginRef}\n                onFocus={() => onFocusInput(loginRef)}\n                onBlur={() => onBlurInput(loginRef)}\n                onIconClick={() => onIconClick(loginRef)}\n                size={'default'}\n            />\n            <Input\n                type={'password'}\n                placeholder={'Пароль'}\n                value={form.password}\n                icon={'EditIcon'}\n                onChange={(e) => onChange(e, setForm, form)}\n                name={'password'}\n                ref={passwordRef}\n                onFocus={() => onFocusInput(passwordRef)}\n                onBlur={() => onBlurInput(passwordRef)}\n                onIconClick={() => onIconClick(passwordRef)}\n                size={'default'}\n            />\n            <div className={styles.info_change}>\n                <span className={`text text_type_main-default ${styles.info_cancel}`} onClick={resetChanges}>\n                    Отмена\n                </span>\n                <Button type=\"primary\" size=\"medium\">\n                    Сохранить\n                </Button>\n            </div>\n        </form>\n    );\n};\n\nexport default ProfileEdit;\n","import { TFeedOrder } from '../../components/feed/feed';\n\nexport const WS_CONNECTION_START = 'WS_CONNECTION_START' as const;\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS' as const;\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR' as const;\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED' as const;\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE' as const;\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE' as const;\nexport const GET_FEED = 'GET_FEED' as const;\nexport const GET_OWNER_FEED = 'GET_OWNER_FEED' as const;\n\nexport interface IWsConnectionStart {\n    readonly type: typeof WS_CONNECTION_START;\n    readonly payload: {\n        url: string;\n    };\n}\n\nexport interface IWsConnectionSuccess {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n    readonly payload: Event;\n}\n\nexport interface IWsConnectionError {\n    readonly type: typeof WS_CONNECTION_ERROR;\n    readonly payload: Event;\n}\n\nexport interface IWsConnectionClosed {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n    readonly payload: CloseEvent;\n}\n\nexport interface IWsGetMessage {\n    readonly type: typeof WS_GET_MESSAGE;\n    readonly payload: {\n        orders: Array<TFeedOrder>;\n        total: number;\n        totalToday: number;\n    };\n}\n\nexport interface IWsSendMessage {\n    readonly type: typeof WS_SEND_MESSAGE;\n    readonly payload: string;\n}\n\nexport interface IGetFeed {\n    readonly type: typeof GET_FEED;\n    readonly payload: {\n        orders: Array<TFeedOrder>;\n        total: number;\n        totalToday: number;\n    };\n}\n\nexport interface IGetOwnerFeed {\n    readonly type: typeof GET_OWNER_FEED;\n    readonly payload: {\n        orders: Array<TFeedOrder>;\n        total: number;\n        totalToday: number;\n    };\n}\n\nexport type TWsActions =\n    | IWsConnectionStart\n    | IWsConnectionSuccess\n    | IWsConnectionError\n    | IWsConnectionClosed\n    | IWsGetMessage\n    | IWsSendMessage\n    | IGetFeed\n    | IGetOwnerFeed;\n","import React, { FC } from 'react';\nimport styles from './circle-ingredient.module.css';\n\nexport type TCircleIngredientProps = {\n    name: string;\n    url: string;\n    index: number;\n    totalIngrds?: number;\n};\n\nconst indexCreator = (index: number): { zIndex: number } => {\n    return {\n        zIndex: index,\n    };\n};\n\nconst CircleIngredient: FC<TCircleIngredientProps> = ({ name, url, index, totalIngrds }) => {\n    return (\n        <div className={styles.main} style={indexCreator(index)}>\n            {totalIngrds && (\n                <p className={`text text_type_digits-default ${styles.total_ingredients}`}>+{totalIngrds}</p>\n            )}\n            <img className={totalIngrds ? styles.image_background : styles.image} src={url} alt={name} />\n        </div>\n    );\n};\n\nexport default CircleIngredient;\n","import React, { FC, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './feed-order.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport CircleIngredient from '../../circle-ingredient/circle-ingredient';\nimport { dataFunc, orderSumFunc } from '../../../utils';\nimport { TIngredient } from '../../burger-ingredients/ingredient/ingredient-types';\nimport { TCircleIngredientProps } from '../../circle-ingredient/circle-ingredient';\nimport { useSelector } from '../../../services/hooks';\nimport { DEPLOY_URL } from '../../../services/constants';\n\ntype TFeedOrderProps = {\n    readonly id: string;\n    readonly number: number;\n    readonly name: string;\n    readonly date: string;\n    readonly ingredientsIDs: Array<string>;\n};\n\nconst FeedOrder: FC<TFeedOrderProps> = ({ id, number, name, date, ingredientsIDs }) => {\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\n    const location = useLocation();\n\n    const renderIngredientsImages = useCallback(\n        (\n            ingredientsArray: Array<TIngredient>,\n            ingredientID: string,\n            ImageElement: FC<TCircleIngredientProps>,\n            index: number,\n            ingredientsLength: number,\n        ) => {\n            const currentIngredient = ingredientsArray.find((ingredient) => ingredient._id === ingredientID);\n            return currentIngredient && ingredientsLength > 6 && index === 0 ? (\n                <ImageElement\n                    name={currentIngredient.name}\n                    url={currentIngredient.image}\n                    index={index}\n                    totalIngrds={ingredientsLength - 6}\n                    key={index}\n                />\n            ) : (\n                currentIngredient && (\n                    <ImageElement\n                        name={currentIngredient.name}\n                        url={currentIngredient.image}\n                        index={index}\n                        key={index}\n                    />\n                )\n            );\n        },\n        [],\n    );\n\n    const formatedIngredientsIDs = useCallback(() => {\n        const cuttedIDs = [...ingredientsIDs];\n        return cuttedIDs.length > 6 ? cuttedIDs.slice(0, 6) : cuttedIDs;\n    }, [ingredientsIDs]);\n\n    return (\n        <Link\n            to={{\n                pathname: `/${DEPLOY_URL}feed/${id}`,\n                state: { background: location },\n            }}\n            className={`pt-6 pb-6 pl-6 pr-6 mt-5 mr-4 ${styles.main}`}\n            onClick={() => console.log(location)}\n        >\n            <p className={`text text_type_main-default pb-6 ${styles.order}`}>\n                #{number} <span className={`text_color_inactive ${styles.date}`}>{dataFunc(date)}</span>\n            </p>\n            <h3 className=\"text text_type_main-medium pb-6\">{name}</h3>\n            <div className={styles.content}>\n                <div className={styles.images}>\n                    {formatedIngredientsIDs()\n                        .map((ingredient, id) =>\n                            renderIngredientsImages(\n                                ingredients,\n                                ingredient,\n                                CircleIngredient,\n                                id,\n                                ingredientsIDs.length,\n                            ),\n                        )\n                        .reverse()}\n                </div>\n                <p className={`text text_type_digits-default pl-6 ${styles.price}`}>\n                    {orderSumFunc(ingredientsIDs, ingredients)}\n                    <span className={styles.price_icon}>\n                        <CurrencyIcon type=\"primary\" />\n                    </span>\n                </p>\n            </div>\n        </Link>\n    );\n};\n\nexport default FeedOrder;\n","import React, { ReactElement, useEffect } from 'react';\n\nimport styles from './profile-history.module.css';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../../services/action-types/wsActionTypes';\nimport { useDispatch, useSelector } from '../../../services/hooks';\nimport { getCookie } from '../../../utils';\nimport FeedOrder from '../../feed/feed-order/feed-order';\nimport { TFeedOrder } from '../../feed/feed';\nimport { WS_URL } from '../../../services/constants';\n\nconst ProfileHistory = (): ReactElement => {\n    const orders = useSelector((store) => store.userFeed.orders);\n    const accessToken = getCookie('accessToken');\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: WS_CONNECTION_START,\n            payload: { url: `${WS_URL}?token=${accessToken}` },\n        });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        };\n    }, []);\n\n    const content = !orders\n        ? null\n        : orders.map(({ _id, number, name, createdAt, ingredients }: TFeedOrder) => (\n              <FeedOrder key={_id} id={_id} number={number} name={name} date={createdAt} ingredientsIDs={ingredients} />\n          ));\n\n    return <div className={styles.main}>{content}</div>;\n};\n\nexport default ProfileHistory;\n","import React, { ReactElement } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport ProfileEdit from './profile-edit/profile-edit';\nimport ProfileHistory from './profile-history/profile-history';\nimport { TLocationState } from '../app/app-types';\nimport { DEPLOY_URL } from '../../services/constants';\n\nconst Profile = (): ReactElement => {\n    const { pathname } = useLocation<TLocationState>();\n\n    return pathname === `/${DEPLOY_URL}profile/orders` ? <ProfileHistory /> : <ProfileEdit />;\n};\n\nexport default Profile;\n","import React, { ReactElement, useCallback } from 'react';\n\nimport profileStyles from './profile.module.css';\nimport Profile from '../components/profile/profile';\nimport { Link, useLocation } from 'react-router-dom';\nimport { logoutRequest } from '../services/actions/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CommonStateType } from '../services/reducers/reducers-types';\nimport { DEPLOY_URL } from '../services/constants';\n\nexport const ProfilePage = (): ReactElement | null => {\n    const user = useSelector((state: CommonStateType) => state.auth.user);\n    const { pathname } = useLocation();\n    const dispatch = useDispatch();\n\n    const activeRouteHandler = useCallback(\n        (path) => {\n            return path === pathname ? profileStyles.profile__link_isActive : profileStyles.profile__link;\n        },\n        [pathname],\n    );\n\n    const logout = useCallback(\n        (e) => {\n            e.preventDefault();\n            dispatch(logoutRequest());\n        },\n        [dispatch],\n    );\n\n    return user ? (\n        <div className={profileStyles.profile}>\n            <ul className={`pl-5 ${profileStyles.profile__list}`}>\n                <li className={profileStyles.profile__item}>\n                    <Link\n                        to={`/${DEPLOY_URL}profile`}\n                        className={`text text_type_main-medium ${activeRouteHandler(`/${DEPLOY_URL}profile`)}`}\n                    >\n                        Профиль\n                    </Link>\n                </li>\n                <li className={profileStyles.profile__item}>\n                    <Link\n                        to={`/${DEPLOY_URL}profile/orders`}\n                        className={`text text_type_main-medium ${activeRouteHandler(`/${DEPLOY_URL}profile/orders`)} ${\n                            profileStyles.profile__link\n                        }`}\n                    >\n                        История заказов\n                    </Link>\n                </li>\n                <li className={profileStyles.profile__item}>\n                    <Link\n                        onClick={logout}\n                        to={`/${DEPLOY_URL}`}\n                        className={`text text_type_main-medium ${profileStyles.profile__link}`}\n                    >\n                        Выход\n                    </Link>\n                </li>\n            </ul>\n            <Profile />\n        </div>\n    ) : null;\n};\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport ingredientStyles from './ingredient.module.css';\nimport { useSelector } from 'react-redux';\nimport { CommonStateType } from '../services/reducers/reducers-types';\nimport { TIngredient } from '../components/burger-ingredients/ingredient/ingredient-types';\nimport { TIngredientDetailsParams } from '../components/ingredient-details/ingredient-details-types';\n\nexport const Ingredient = (): ReactElement => {\n    const currentIngredients = useSelector((state: CommonStateType) => state.ingredients.ingredients);\n    const [currentIngredient, setCurrentIngredient] = useState<TIngredient>();\n    const { id } = useParams<TIngredientDetailsParams>();\n\n    useEffect(() => {\n        setCurrentIngredient(currentIngredients.filter((item: TIngredient) => item._id === id)[0]);\n    }, [currentIngredients, id]);\n\n    return (\n        currentIngredients && (\n            <div className={`${ingredientStyles.content} pt-10 pb-15 pl-10 pr-10`}>\n                <h2 className=\"text text_type_main-large\">Детали ингредиента</h2>\n                <img\n                    src={currentIngredient && currentIngredient.image_large}\n                    alt={currentIngredient && currentIngredient.name}\n                />\n                <p className=\"text text_type_main-medium mt-4 mb-8 ml-25 mr-25\">\n                    {currentIngredient && currentIngredient.name}\n                </p>\n                <table>\n                    <tbody>\n                        <tr className=\"text text_type_main-default text_color_inactive\">\n                            <th className={ingredientStyles.content__row}>Калории,ккал</th>\n                            <th className={ingredientStyles.content__row}>Белки, г</th>\n                            <th className={ingredientStyles.content__row}>Жиры, г</th>\n                            <th className={ingredientStyles.content__row}>Углеводы, г</th>\n                        </tr>\n                        <tr\n                            className={`${ingredientStyles.ingredient__details} text text_type_digits-default text_color_inactive`}\n                        >\n                            <td className={ingredientStyles.content__row}>\n                                {currentIngredient && currentIngredient.calories}\n                            </td>\n                            <td className={ingredientStyles.content__row}>\n                                {currentIngredient && currentIngredient.proteins}\n                            </td>\n                            <td className={ingredientStyles.content__row}>\n                                {currentIngredient && currentIngredient.fat}\n                            </td>\n                            <td className={ingredientStyles.content__row}>\n                                {currentIngredient && currentIngredient.carbohydrates}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    );\n};\n","import React, { ReactElement } from 'react';\n\nimport feedStyles from './feed.module.css';\nimport FeedOrder from './feed-order/feed-order';\nimport { useSelector } from '../../services/hooks';\n\nexport type TFeedOrder = {\n    _id: string;\n    ingredients: Array<string>;\n    status: string;\n    name: string;\n    createdAt: string;\n    updatedAt: string;\n    number: number;\n};\n\nconst Feed = (): ReactElement => {\n    const orders = useSelector((store) => store.feed.orders);\n\n    const content = !orders\n        ? null\n        : orders.map(({ _id, number, name, createdAt, ingredients }: TFeedOrder) => (\n              <FeedOrder key={_id} id={_id} number={number} name={name} date={createdAt} ingredientsIDs={ingredients} />\n          ));\n\n    return <div className={feedStyles.list}>{content}</div>;\n};\n\nexport default Feed;\n","import React, { FC } from 'react';\n\nimport styles from './orders.module.css';\nimport { TFeedOrder } from '../feed';\n\ntype TOrdersProps = {\n    total: number;\n    totalToday: number;\n    orders: Array<TFeedOrder>;\n};\n\nconst Orders: FC<TOrdersProps> = ({ total, totalToday, orders }) => {\n    const readyOrders = orders.filter((order) => order.status === 'done').slice(0, 5);\n    const cookingOrders = orders.filter((order) => order.status !== 'done').slice(0, 5);\n\n    return (\n        <section className={styles.main}>\n            <div className=\"mr-9\">\n                <h4 className=\"text text_type_main-medium\">Готовы:</h4>\n                <ul className={styles.orders__list}>\n                    {readyOrders.map((order, index) => (\n                        <li key={index} className={`text text_type_digits-default ${styles.orders__item_done}`}>\n                            {order.number}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className={styles.orders}>\n                <h4 className=\"text text_type_main-medium\">В работе:</h4>\n                <ul className={styles.orders__list}>\n                    {cookingOrders.map((order, index) => (\n                        <li key={index} className={`text text_type_digits-default ${styles.orders__item}`}>\n                            {order.number}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"text text_type_main-medium mt-10 mb-10\">\n                Выполнено за все время <br />\n                <span className={`text text_type_digits-large ${styles.digits_shadow}`}>{total}</span>\n            </div>\n            <div className=\"text text_type_main-medium\">\n                Выполнено за сегодня <br />\n                <span className={`text text_type_digits-large ${styles.digits_shadow}`}>{totalToday}</span>\n            </div>\n        </section>\n    );\n};\n\nexport default Orders;\n","import React, { ReactElement, useEffect } from 'react';\n\nimport Feed from '../components/feed/feed';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../services/action-types/wsActionTypes';\nimport { useDispatch } from 'react-redux';\nimport feedStyles from '../components/feed/feed.module.css';\nimport Orders from '../components/feed/orders/orders';\nimport { useSelector } from '../services/hooks';\n\nexport const OrderFeedPage = (): ReactElement => {\n    const dispatch = useDispatch();\n    const orders = useSelector((store) => store.feed.orders);\n    const { total, totalToday } = useSelector((store) => ({\n        total: store.feed.total,\n        totalToday: store.feed.totalToday,\n    }));\n\n    useEffect(() => {\n        dispatch({ type: WS_CONNECTION_START, payload: { url: 'wss://norma.nomoreparties.space/orders/all' } });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        };\n    }, []);\n\n    return (\n        <div className={feedStyles.main}>\n            <h2 className=\"text text_type_main-large pt-10\">Лента заказов</h2>\n            <div className={feedStyles.orders}>\n                <Feed />\n                <Orders total={total} totalToday={totalToday} orders={orders} />\n            </div>\n        </div>\n    );\n};\n","import React, { FC } from 'react';\n\nimport styles from './order-ingredient.module.css';\nimport CircleIngredient from '../circle-ingredient/circle-ingredient';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\ntype TOrderIngredientProps = {\n    name: string;\n    image: string;\n    index: number;\n    price: number;\n    count: number;\n};\n\nconst OrderIngredient: FC<TOrderIngredientProps> = ({ name, image, index, price, count }) => {\n    return (\n        <div className={styles.main}>\n            <CircleIngredient name={name} url={image} index={index} />\n            <p className=\"text text_type_main-default ml-4\">{name}</p>\n            <p className={`text text_type_digits-default ${styles.price}`}>\n                <span>{count}</span>x {price}\n                <span className=\"ml-2\">\n                    <CurrencyIcon type=\"primary\" />\n                </span>\n            </p>\n        </div>\n    );\n};\n\nexport default OrderIngredient;\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport styles from './order.module.css';\nimport OrderIngredient from '../components/order-ingredient/order-ingredient';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useParams } from 'react-router-dom';\nimport { dataFunc, orderSumFunc, orderIngredients } from '../utils';\nimport { TIngredientDetailsParams } from '../components/ingredient-details/ingredient-details-types';\nimport { TFeedOrder } from '../components/feed/feed';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../services/action-types/wsActionTypes';\nimport { WS_URL } from '../services/constants';\nimport { TIngredient } from '../components/burger-ingredients/ingredient/ingredient-types';\n\nexport const OrderPage = (): ReactElement | null => {\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\n    const currentOrders = useSelector((store) => store.feed.orders);\n    const dispatch = useDispatch();\n    const [currentOrder, setCurrentOrder] = useState<TFeedOrder | null>();\n    const [isIngredientsCount, setIsIngredientsCount] = useState<boolean>(false);\n    const { id } = useParams<TIngredientDetailsParams>();\n    const [order, setOrder] = useState<TIngredient[]>();\n\n    const orderStatus =\n        currentOrder &&\n        (currentOrder.status === 'done' ? 'Выполнен' : currentOrder.status === 'created' ? 'Создан' : 'Готовится');\n\n    useEffect(() => {\n        setCurrentOrder(currentOrders.filter((item: TFeedOrder) => item._id === id)[0]);\n        return () => setCurrentOrder(null);\n    }, [currentOrders, id]);\n\n    useEffect(() => {\n        dispatch({ type: WS_CONNECTION_START, payload: { url: `${WS_URL}/all` } });\n        return () => {\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (currentOrder && !isIngredientsCount) {\n            const ingredientsOfOrder = orderIngredients(currentOrder, ingredients);\n            if (ingredientsOfOrder && ingredientsOfOrder.length) setOrder(ingredientsOfOrder);\n            setIsIngredientsCount(true);\n        }\n    }, [currentOrder]);\n\n    return currentOrder ? (\n        <div className={styles.main}>\n            <p className={`text text_type_main-default mb-10 ${styles.number}`}>#{currentOrder.number}</p>\n            <h3 className=\"text text_type_main-medium mb-3\">{currentOrder.name}</h3>\n            <p className={`text text_type_main-default mb-15 ${styles.status}`}>{orderStatus}</p>\n            <p className=\"text text_type_main-medium mb-6\" onClick={() => console.log(order)}>\n                Состав:\n            </p>\n            <div className={styles.order}>\n                <div className={`pr-6 ${styles.ingredients}`}>\n                    {order &&\n                        order.map((ingredient, i) => (\n                            <OrderIngredient\n                                key={i}\n                                name={ingredient.name}\n                                price={ingredient.price}\n                                count={ingredient.ingredientOrderCount}\n                                index={i}\n                                image={ingredient.image}\n                            />\n                        ))}\n                </div>\n                <div className={`mt-10 ${styles.data}`}>\n                    <p className={`text text_type_main-default text_color_inactive`}>\n                        {dataFunc(currentOrder.createdAt)}\n                    </p>\n                    <p className={`text text_type_digits-default ${styles.price}`}>\n                        {orderSumFunc(currentOrder.ingredients, ingredients)}\n                        <span className=\"ml-2\">\n                            <CurrencyIcon type=\"primary\" />\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n","import React, { ReactElement } from 'react';\nimport { useSelector } from '../../services/hooks';\n\nimport detailsStyles from './ingredient-details.module.css';\nimport { useParams } from 'react-router-dom';\nimport { TIngredientDetailsParams } from './ingredient-details-types';\nimport { CommonStateType } from '../../services/reducers/reducers-types';\nimport { TIngredient } from '../burger-ingredients/ingredient/ingredient-types';\n\nconst IngredientDetails = (): ReactElement => {\n    const { id } = useParams<TIngredientDetailsParams>();\n    const { image_large, name, calories, proteins, fat, carbohydrates } = useSelector(\n        (state: CommonStateType) => state.ingredients.ingredients.filter((item: TIngredient) => item._id === id)[0],\n    );\n\n    return (\n        <>\n            <img src={image_large} alt={name} />\n            <p className=\"text text_type_main-medium mt-4 mb-8 ml-25 mr-25\">{name}</p>\n            <table>\n                <tbody>\n                    <tr className=\"text text_type_main-default text_color_inactive\">\n                        <th>Калории,ккал</th>\n                        <th>Белки, г</th>\n                        <th>Жиры, г</th>\n                        <th>Углеводы, г</th>\n                    </tr>\n                    <tr\n                        className={`${detailsStyles.ingredient__details} text text_type_digits-default text_color_inactive`}\n                    >\n                        <td>{calories}</td>\n                        <td>{proteins}</td>\n                        <td>{fat}</td>\n                        <td>{carbohydrates}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </>\n    );\n};\n\nexport default IngredientDetails;\n","import {\n    REQUEST_URL,\n    GET_INGREDIENTS,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    SET_ACTIVE_TAB,\n    INCREASE_INGREDIENT_COUNT,\n    DECREASE_INGREDIENT_COUNT,\n} from '../constants';\nimport { AppThunk, AppDispatch } from '../thunk-types';\nimport { TIngredient } from '../../components/burger-ingredients/ingredient/ingredient-types';\n\nexport const actionCreators = {\n    fetchIngredientsRequest: () => ({ type: GET_INGREDIENTS }),\n    fetchIngredientsRequestSuccess: (ingredients: Array<TIngredient>) => ({\n        type: GET_INGREDIENTS_SUCCESS,\n        ingredients,\n    }),\n    fetchIngredientsFailed: () => ({ type: GET_INGREDIENTS_FAILED }),\n};\n\nexport const fetchIngredientsRequest = () => {\n    return {\n        type: GET_INGREDIENTS,\n    };\n};\n\nexport const setIngredients = (ingredients: Array<TIngredient>) => {\n    return {\n        type: GET_INGREDIENTS_SUCCESS,\n        ingredients,\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: GET_INGREDIENTS_FAILED,\n    };\n};\n\nexport interface IGetIngredients {\n    readonly type: typeof GET_INGREDIENTS;\n}\n\nexport interface IGetIngredientsSuccess {\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\n    readonly ingredients: Array<TIngredient>;\n}\n\nexport interface IGetIngredientsFailed {\n    readonly type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport interface ISetActiveTab {\n    readonly type: typeof SET_ACTIVE_TAB;\n    readonly tab: string;\n}\n\nexport interface IIncreaseIngredientCount {\n    readonly type: typeof INCREASE_INGREDIENT_COUNT;\n    readonly ingredientId: string;\n}\n\nexport interface IDecreaseIngredientCount {\n    readonly type: typeof DECREASE_INGREDIENT_COUNT;\n    readonly ingredientId: string;\n}\n\nexport type TBurgerIngredientsActions =\n    | IGetIngredients\n    | IGetIngredientsSuccess\n    | IGetIngredientsFailed\n    | ISetActiveTab\n    | IIncreaseIngredientCount\n    | IDecreaseIngredientCount;\n\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\n    actionCreators.fetchIngredientsRequest();\n\n    fetch(REQUEST_URL + '/ingredients')\n        .then((res) => {\n            if (res && res.ok) {\n                res.json().then((res) => {\n                    dispatch(actionCreators.fetchIngredientsRequestSuccess(res.data));\n                });\n            } else {\n                actionCreators.fetchIngredientsFailed();\n            }\n        })\n        .catch(() => {\n            actionCreators.fetchIngredientsFailed();\n        });\n};\n","import React, { ReactElement, SyntheticEvent, useEffect } from 'react';\n\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport AppHeader from '../app-header/app-header';\nimport styles from './app.module.css';\nimport ProtectedRoute from '../protected-route/ProtectedRoute';\nimport {\n    HomePage,\n    LoginPage,\n    RegisterPage,\n    NotFoundPage,\n    ForgotPasswordPage,\n    ResetPasswordPage,\n    ProfilePage,\n    Ingredient,\n    OrderFeedPage,\n    OrderPage,\n} from '../../pages';\nimport Modal from '../modal/modal';\nimport { useDispatch } from '../../services/hooks';\nimport IngredientDetails from '../ingredient-details/ingredient-details';\nimport { getUserInfo } from '../../services/actions/auth';\nimport { getCookie } from '../../utils';\nimport { getIngredients } from '../../services/actions/burger-ingredients';\nimport { TLocationState } from './app-types';\nimport { DEPLOY_URL } from '../../services/constants';\n\nconst App = (): ReactElement => {\n    const history = useHistory();\n    const location: TLocationState = useLocation();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const token = getCookie('accessToken');\n        dispatch(getIngredients());\n        dispatch(getUserInfo(token));\n    }, [dispatch]);\n\n    const back = (e: KeyboardEvent | SyntheticEvent) => {\n        e.stopPropagation();\n        history.goBack();\n    };\n\n    const action = history.action === 'PUSH' || history.action === 'REPLACE';\n    const modalOpen = action && location.state && location.state.background;\n\n    return (\n        <>\n            <AppHeader />\n            <main className={styles.main}>\n                <Switch location={modalOpen || location}>\n                    <Route path={`/${DEPLOY_URL}`} exact={true} component={HomePage} />\n                    <ProtectedRoute path={`/${DEPLOY_URL}login`} exact={true}>\n                        <LoginPage />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={`/${DEPLOY_URL}register`} exact={true}>\n                        <RegisterPage />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={`/${DEPLOY_URL}forgot-password`} exact={true}>\n                        <ForgotPasswordPage />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={`/${DEPLOY_URL}reset-password`} exact={true}>\n                        <ResetPasswordPage />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={`/${DEPLOY_URL}profile`} exact={true}>\n                        <ProfilePage />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={`/${DEPLOY_URL}profile/orders`} exact={true}>\n                        <ProfilePage />\n                    </ProtectedRoute>\n                    <Route path={`/${DEPLOY_URL}ingredients/:id`} exact={true} component={Ingredient} />\n                    <Route path={`/${DEPLOY_URL}feed`} exact={true} component={OrderFeedPage} />\n                    <Route path={`/${DEPLOY_URL}feed/:id`} exact={true} component={OrderPage} />\n                    <Route component={NotFoundPage} />\n                </Switch>\n                {modalOpen && (\n                    <Route path={`/${DEPLOY_URL}ingredients/:id`}>\n                        <Modal onClose={back}>\n                            <IngredientDetails />\n                        </Modal>\n                    </Route>\n                )}\n                {modalOpen && (\n                    <Route path={`/${DEPLOY_URL}feed/:id`}>\n                        <Modal onClose={back}>\n                            <OrderPage />\n                        </Modal>\n                    </Route>\n                )}\n                {modalOpen && (\n                    <Route path={`/${DEPLOY_URL}profile/:id`}>\n                        <Modal onClose={back}>\n                            <OrderPage />\n                        </Modal>\n                    </Route>\n                )}\n            </main>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import {\n    GET_INGREDIENTS,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    SET_ACTIVE_TAB,\n    INCREASE_INGREDIENT_COUNT,\n    DECREASE_INGREDIENT_COUNT,\n} from '../constants';\nimport { TIngredient } from '../../components/burger-ingredients/ingredient/ingredient-types';\nimport { TBurgerIngredientsActions } from '../actions/burger-ingredients';\n\ntype TIngredientsInitialState = {\n    ingredients: Array<TIngredient>;\n    ingredientsRequest: boolean;\n    ingredientsFailed: boolean;\n    activeTab: string;\n};\n\nconst initialState = {\n    ingredients: [],\n    ingredientsRequest: false,\n    ingredientsFailed: false,\n    activeTab: 'Булки',\n};\n\nexport const ingredientsReducer = (\n    state = initialState,\n    action: TBurgerIngredientsActions,\n): TIngredientsInitialState => {\n    switch (action.type) {\n        case GET_INGREDIENTS: {\n            return {\n                ...state,\n                ingredientsRequest: true,\n                ingredientsFailed: false,\n            };\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                ingredients: action.ingredients.map((ingredient) => ({\n                    ...ingredient,\n                    ingredientCount: 0,\n                    ingredientOrderCount: 0,\n                })),\n                ingredientsRequest: false,\n                ingredientsFailed: false,\n            };\n        }\n        case GET_INGREDIENTS_FAILED: {\n            return {\n                ...state,\n                ingredientsFailed: true,\n            };\n        }\n        case SET_ACTIVE_TAB: {\n            return {\n                ...state,\n                activeTab: action.tab,\n            };\n        }\n        case INCREASE_INGREDIENT_COUNT: {\n            return {\n                ...state,\n                ingredients: state.ingredients.map((ingredient: TIngredient) => {\n                    if (ingredient._id === action.ingredientId) {\n                        return {\n                            ...ingredient,\n                            ingredientCount: (ingredient.ingredientCount += 1),\n                        };\n                    }\n                    return ingredient;\n                }),\n            };\n        }\n        case DECREASE_INGREDIENT_COUNT: {\n            return {\n                ...state,\n                ingredients: state.ingredients.map((ingredient: TIngredient) => {\n                    if (ingredient._id === action.ingredientId) {\n                        return {\n                            ...ingredient,\n                            ingredientCount: (ingredient.ingredientCount -= 1),\n                        };\n                    }\n                    return ingredient;\n                }),\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    ADD_INGREDIENT,\n    REMOVE_INGREDIENT,\n    SET_TOTAL,\n    SET_INGREDIENT_INDEX,\n    SET_INGREDIENTS_IDS,\n    MOVE_CARD,\n} from '../constants';\nimport { TIngredient } from '../../components/burger-ingredients/ingredient/ingredient-types';\nimport { TConstructorListActions } from '../actions/constructor-list';\n\ntype TConstructorInitialState = {\n    bun: TIngredient | unknown;\n    ingredients: Array<TIngredient>;\n    total: number;\n    ingredientIDs: Array<string>;\n};\n\nconst ConstructorInitialState = {\n    bun: {},\n    ingredients: [],\n    total: 0,\n    ingredientIDs: [],\n};\n\nexport const constructorReducer = (\n    state = ConstructorInitialState,\n    action: TConstructorListActions,\n): TConstructorInitialState => {\n    switch (action.type) {\n        case ADD_INGREDIENT: {\n            if (action.ingredient.type === 'bun') {\n                return {\n                    ...state,\n                    bun: action.ingredient,\n                };\n            }\n            return {\n                ...state,\n                ingredients: (state.ingredients as Array<TIngredient>).concat(action.ingredient),\n            };\n        }\n        case REMOVE_INGREDIENT: {\n            return {\n                ...state,\n                ingredients: state.ingredients.filter((ingredient: TIngredient) => {\n                    return ingredient._id === action.id && ingredient.index === action.index ? null : ingredient;\n                }),\n            };\n        }\n        case SET_TOTAL: {\n            return {\n                ...state,\n                total: action.total,\n            };\n        }\n        case SET_INGREDIENT_INDEX: {\n            return {\n                ...state,\n                ingredients: state.ingredients.map((ingredient: TIngredient, index) => ({\n                    ...ingredient,\n                    index: index,\n                })),\n            };\n        }\n        case SET_INGREDIENTS_IDS: {\n            return {\n                ...state,\n                ingredientIDs: action.IDs,\n            };\n        }\n        case MOVE_CARD: {\n            const dragIngredient = state.ingredients.filter((i: TIngredient) => i.index === action.index)[0];\n            const newIngredients = [...state.ingredients];\n            newIngredients.splice(action.index, 1);\n            newIngredients.splice(action.atIndex, 0, dragIngredient);\n\n            return {\n                ...state,\n                ingredients: newIngredients,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import { SET_INGREDIENT_DETAILS, REMOVE_INGREDIENT_DETAILS } from '../constants';\nimport { TIngredientDetailsActions } from '../actions/ingredient-details';\nimport { TIngredientDetails } from '../actions/ingredient-details';\n\ntype TIngredientDetailsState = TIngredientDetails;\n\nconst IngredientInitialState = {\n    image_large: '',\n    name: '',\n    calories: '',\n    proteins: '',\n    fat: '',\n    carbohydrates: '',\n};\n\nexport const ingredientDetailsReducer = (\n    state = IngredientInitialState,\n    action: TIngredientDetailsActions,\n): TIngredientDetailsState => {\n    switch (action.type) {\n        case SET_INGREDIENT_DETAILS: {\n            return {\n                ...action.details,\n            };\n        }\n        case REMOVE_INGREDIENT_DETAILS: {\n            return IngredientInitialState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import { GET_ORDER_NUMBER, GET_ORDER_NUMBER_SUCCESS, GET_ORDER_NUMBER_FAILED, RESET_ORDER_NUMBER } from '../constants';\nimport { TOrderDetailsActions } from '../actions/order-details';\n\ntype TOrderDetailsInitialState = {\n    number: number | undefined;\n    orderNumberRequest: boolean;\n    orderNumberFailed: boolean;\n};\n\nconst initialState = {\n    number: undefined,\n    orderNumberRequest: false,\n    orderNumberFailed: false,\n};\n\nexport const orderDetailsReducer = (state = initialState, action: TOrderDetailsActions): TOrderDetailsInitialState => {\n    switch (action.type) {\n        case GET_ORDER_NUMBER: {\n            return {\n                ...state,\n                orderNumberRequest: true,\n            };\n        }\n        case GET_ORDER_NUMBER_SUCCESS: {\n            return {\n                ...state,\n                orderNumberRequest: false,\n                orderNumberFailed: false,\n                number: action.number,\n            };\n        }\n        case GET_ORDER_NUMBER_FAILED: {\n            return {\n                ...state,\n                orderNumberRequest: false,\n                orderNumberFailed: true,\n            };\n        }\n        case RESET_ORDER_NUMBER: {\n            return initialState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    AUTHORIZE_USER,\n    AUTHORIZE_USER_SUCCESS,\n    AUTHORIZE_USER_FAILED,\n    REFRESH_TOKEN,\n    REFRESH_TOKEN_SUCCESS,\n    REFRESH_TOKEN_FAILED,\n    LOGOUT,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILED,\n    SET_USER,\n    SET_PASSWORD_RESET,\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n} from '../constants';\nimport { TAuthUserActions } from '../actions/auth';\n\ntype TAuthInitialState = {\n    user: {\n        name: string;\n        email: string;\n    } | null;\n    userDataRequest: boolean;\n    userDataFailed: boolean;\n    passwordReset: boolean;\n};\n\nconst initialUserState = {\n    user: null,\n    userDataRequest: true,\n    userDataFailed: false,\n    passwordReset: false,\n};\n\nexport const authReducer = (state = initialUserState, action: TAuthUserActions): TAuthInitialState => {\n    switch (action.type) {\n        case GET_USER_SUCCESS: {\n            return {\n                ...state,\n                user: action.user,\n                userDataRequest: false,\n            };\n        }\n        case GET_USER_FAILED: {\n            return {\n                ...state,\n                userDataRequest: false,\n                userDataFailed: true,\n            };\n        }\n        case SET_USER: {\n            return {\n                ...state,\n                user: action.user,\n            };\n        }\n        case REGISTER_USER: {\n            return {\n                ...state,\n                userDataRequest: true,\n            };\n        }\n        case REGISTER_USER_SUCCESS: {\n            return {\n                ...state,\n                user: action.user,\n                userDataRequest: false,\n                userDataFailed: false,\n            };\n        }\n        case REGISTER_USER_FAILED: {\n            return {\n                ...state,\n                userDataFailed: true,\n            };\n        }\n        case AUTHORIZE_USER: {\n            return {\n                ...state,\n                userDataRequest: true,\n            };\n        }\n        case AUTHORIZE_USER_SUCCESS: {\n            return {\n                ...state,\n                user: action.user,\n                userDataRequest: false,\n                userDataFailed: false,\n            };\n        }\n        case AUTHORIZE_USER_FAILED: {\n            return {\n                ...state,\n                userDataFailed: true,\n            };\n        }\n        case REFRESH_TOKEN: {\n            return {\n                ...state,\n                userDataRequest: true,\n            };\n        }\n        case REFRESH_TOKEN_SUCCESS: {\n            return {\n                ...state,\n                userDataRequest: false,\n                userDataFailed: false,\n            };\n        }\n        case REFRESH_TOKEN_FAILED: {\n            return {\n                ...state,\n                userDataFailed: true,\n            };\n        }\n        case LOGOUT: {\n            return {\n                ...state,\n                userDataRequest: true,\n            };\n        }\n        case LOGOUT_SUCCESS: {\n            return {\n                ...state,\n                user: action.user,\n                userDataRequest: false,\n                userDataFailed: false,\n            };\n        }\n        case LOGOUT_FAILED: {\n            return {\n                ...state,\n                userDataFailed: true,\n            };\n        }\n        case SET_PASSWORD_RESET: {\n            return {\n                ...state,\n                passwordReset: action.passwordIsReset,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n} from '../action-types/wsActionTypes';\nimport { TWsActions } from '../action-types/wsActionTypes';\nimport { TFeedOrder } from '../../components/feed/feed';\n\ntype TWSState = {\n    wsConnected: boolean;\n    orders: Array<TFeedOrder>;\n    total: number;\n    totalToday: number;\n    error?: Event;\n};\n\nconst initialState: TWSState = {\n    wsConnected: false,\n    orders: [],\n    total: 0,\n    totalToday: 0,\n};\n\nexport const wsFeedReducer = (state = initialState, action: TWsActions): TWSState => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: true,\n            };\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                wsConnected: false,\n            };\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false,\n            };\n        case WS_GET_MESSAGE:\n            const { orders, total, totalToday } = action.payload;\n            return {\n                ...state,\n                error: undefined,\n                orders: [...orders],\n                total,\n                totalToday,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n} from '../action-types/wsActionTypes';\nimport { TWsActions } from '../action-types/wsActionTypes';\nimport { TFeedOrder } from '../../components/feed/feed';\n\ntype TWSState = {\n    wsConnected: boolean;\n    orders: Array<TFeedOrder>;\n    total: number;\n    totalToday: number;\n    error?: Event;\n};\n\nconst initialState: TWSState = {\n    wsConnected: false,\n    orders: [],\n    total: 0,\n    totalToday: 0,\n};\n\nexport const wsUserFeedReducer = (state = initialState, action: TWsActions): TWSState => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: true,\n            };\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                wsConnected: false,\n            };\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false,\n            };\n        case WS_GET_MESSAGE:\n            const { orders } = action.payload;\n            return {\n                ...state,\n                error: undefined,\n                orders: [...orders.reverse()],\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\n\nimport { ingredientsReducer } from './burger-ingredients';\nimport { constructorReducer } from './constructor-list';\nimport { ingredientDetailsReducer } from './ingredient-details';\nimport { orderDetailsReducer } from './order-details';\nimport { authReducer } from './auth';\nimport { wsFeedReducer } from './wsFeedReducer';\nimport { wsUserFeedReducer } from './wsUserFeedReducer';\n\nexport const rootReducer = combineReducers({\n    ingredients: ingredientsReducer,\n    burger: constructorReducer,\n    details: ingredientDetailsReducer,\n    order: orderDetailsReducer,\n    auth: authReducer,\n    feed: wsFeedReducer,\n    userFeed: wsUserFeedReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport './normalize.css';\nimport App from './components/app/app.tsx';\nimport reportWebVitals from './reportWebVitals';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers';\nimport { socketMiddleware } from './services/middlewares/socketMiddleware';\n\nconst composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\nconst enhancer = composeEnhancers(applyMiddleware(socketMiddleware(), thunk));\n\nexport const store = createStore(rootReducer, enhancer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import type { Middleware, MiddlewareAPI } from 'redux';\n\nimport type { AppDispatch, RootState } from '../thunk-types';\nimport { IWsConnectionStart, TWsActions } from '../action-types/wsActionTypes';\nimport {\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_GET_MESSAGE,\n    WS_CONNECTION_CLOSED,\n} from '../action-types/wsActionTypes';\n\nexport const socketMiddleware = (): Middleware => {\n    return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n        let socket: WebSocket | null = null;\n\n        return (next) => (action: TWsActions) => {\n            const { dispatch } = store;\n            const { type } = action;\n\n            if (type === WS_CONNECTION_START) {\n                const { payload } = action as IWsConnectionStart;\n                socket = new WebSocket(payload.url);\n            }\n\n            if (socket?.readyState === 1 && type === WS_CONNECTION_CLOSED) {\n                socket?.close();\n            }\n\n            if (socket) {\n                socket.onopen = () => {\n                    dispatch({ type: WS_CONNECTION_SUCCESS });\n                };\n\n                socket.onerror = (event) => {\n                    dispatch({ type: WS_CONNECTION_ERROR, payload: event });\n                };\n\n                socket.onmessage = (event) => {\n                    const { data } = event;\n                    const parsedData = JSON.parse(data);\n                    const { success, ...restData } = parsedData;\n                    success && dispatch({ type: WS_GET_MESSAGE, payload: restData });\n                };\n\n                socket.onclose = (event) => {\n                    dispatch({ type: WS_CONNECTION_CLOSED, payload: event });\n                    if (event.wasClean) {\n                        console.log(`Соединение закрыто - код ${event.code}`);\n                    } else {\n                        console.log(`Соединение закрыто некорректно. Код закрытия - ${event.code}`);\n                    }\n                };\n            }\n\n            next(action);\n        };\n    };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredient_content__2wfoi\",\"content__row\":\"ingredient_content__row__1nruG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3ILEA\",\"profile__list\":\"profile_profile__list__29WJM\",\"profile__item\":\"profile_profile__item__VS3tE\",\"profile__link\":\"profile_profile__link__31dwo\",\"profile__link_isActive\":\"profile_profile__link_isActive__2ETcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"orders_main__3Akh7\",\"orders\":\"orders_orders__G9wk0\",\"orders__list\":\"orders_orders__list__2qpc7\",\"orders__item\":\"orders_orders__item__3-_r8\",\"orders__item_done\":\"orders_orders__item_done__3b0ea\",\"digits_shadow\":\"orders_digits_shadow__1gDhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order__number\":\"order-details_order__number__g-Ijp\",\"order__text_type_centered\":\"order-details_order__text_type_centered__3PJ2m\",\"order__done\":\"order-details_order__done__7rqou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-order_main__1r59F\",\"order\":\"feed-order_order__37rFE\",\"date\":\"feed-order_date__38zoS\",\"content\":\"feed-order_content__1WTk-\",\"images\":\"feed-order_images__3VMfy\",\"image\":\"feed-order_image__yTNAJ\",\"price\":\"feed-order_price__2D46_\",\"price_icon\":\"feed-order_price_icon__3Uwpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order_main__389Vy\",\"number\":\"order_number__2AdHP\",\"status\":\"order_status__3ZdKQ\",\"order\":\"order_order__R161H\",\"ingredients\":\"order_ingredients__3tnMK\",\"data\":\"order_data__4p_FN\",\"price\":\"order_price__CU2Ms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonList\":\"constructor-list_commonList__1nC8T\",\"bothSides\":\"constructor-list_bothSides__Wbksy\",\"constructorList\":\"constructor-list_constructorList__3Xp6w\",\"item\":\"constructor-list_item__34E6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup__overlay\":\"popup_popup__overlay__3Irdv\",\"popup__content\":\"popup_popup__content__2rz1q\",\"popup__base\":\"popup_popup__base__2xfxg\",\"popup__cross\":\"popup_popup__cross__1aBBL\",\"popup__text_type_centered\":\"popup_popup__text_type_centered__33PIb\",\"popup__title\":\"popup_popup__title__2Cb17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"register_main__425LN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"header__nav\":\"app-header_header__nav__1wJFs\",\"header__list\":\"app-header_header__list__3y_7Q\",\"header__logo\":\"app-header_header__logo__27E10\",\"header__link\":\"app-header_header__link__Qgbfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"profile-edit_inputs__nd_Z9\",\"input_isActive\":\"profile-edit_input_isActive__W48N2\",\"info_change\":\"profile-edit_info_change__1Hmmg\",\"info_cancel\":\"profile-edit_info_cancel__1HjpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed_main__3HiF9\",\"orders\":\"feed_orders__hw0P4\",\"list\":\"feed_list__2Cndy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients_ingredients__BIdYV\",\"ingredients__list\":\"ingredients_ingredients__list__3bYsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__1cRdv\",\"ingredient__priceWrapper\":\"ingredient_ingredient__priceWrapper__1lBHr\",\"ingredient__price\":\"ingredient_ingredient__price__11emp\",\"ingredient__name\":\"ingredient_ingredient__name__1un8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"circle-ingredient_main__Rakh0\",\"image\":\"circle-ingredient_image__320JN\",\"image_background\":\"circle-ingredient_image_background__1awif\",\"total_ingredients\":\"circle-ingredient_total_ingredients__1usbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__item\":\"app-header-item_header__item__3wD1r\",\"header__iconWrapper\":\"app-header-item_header__iconWrapper__21pc-\",\"header__link\":\"app-header-item_header__link__3HjHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burger-ingredients_ingredients__2TY9H\",\"ingredients__loading\":\"burger-ingredients_ingredients__loading__15n-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__total\":\"constructor-cart_constructor__total__3U_YT\",\"constructor__price\":\"constructor-cart_constructor__price__3TReF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"notFound_notFound__3Xw7x\",\"link\":\"notFound_link__2p8uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-ingredient_main__1Ix9O\",\"price\":\"order-ingredient_price__33FAt\"};"],"sourceRoot":""}